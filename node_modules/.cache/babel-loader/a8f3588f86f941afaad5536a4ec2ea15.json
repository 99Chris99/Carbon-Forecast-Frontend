{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport API from './adapters/API';\nimport Nav from './components/Nav';\nimport Start from './components/Start';\nimport Forecast from './components/Forecast';\nimport About from './components/About';\nimport Advice from './components/Advice';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      setRegion: 18,\n      regionIndex: [{\n        id: 0,\n        name: 'test'\n      }],\n      forecast: {}\n    };\n\n    this.get48hForecast = id => {\n      API.getRegionId48HrsData(id).then(info => this.setState({\n        forecast: info.data\n      }));\n    };\n\n    this.getRemainingForecast = id;\n\n    this.compileRegionIndex = () => {\n      API.getCurrentRegionalData().then(info => info.data[0].regions.map(item => {\n        this.setState({\n          regionIndex: [...this.state.regionIndex, {\n            id: item.regionid,\n            name: item.shortname\n          }]\n        });\n      }));\n    };\n  }\n\n  //2017-08-25T12:35Z\n  componentDidMount() {\n    this.get48hForecast(\"\".concat(this.state.setRegion));\n    this.compileRegionIndex();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.forecast !== prevState.forecast) {}\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Start, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Start, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/forecast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Forecast, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/advice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Advice, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(About, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","API","Nav","Start","Forecast","About","Advice","App","state","setRegion","regionIndex","id","name","forecast","get48hForecast","getRegionId48HrsData","then","info","setState","data","getRemainingForecast","compileRegionIndex","getCurrentRegionalData","regions","map","item","regionid","shortname","componentDidMount","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport API from './adapters/API'\nimport Nav from './components/Nav';\nimport Start from './components/Start';\nimport Forecast from './components/Forecast';\nimport About from './components/About';\nimport Advice from './components/Advice';\n\n\nexport class App extends Component {\n  \n  \n  state = {\n    setRegion: 18,\n    regionIndex: [{id: 0, name: 'test'}],\n    forecast: {},\n  }\n  \n  \n//2017-08-25T12:35Z\n\n  componentDidMount () {\n    this.get48hForecast(`${this.state.setRegion}`)\n    this.compileRegionIndex()\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (\n      this.state.forecast !== prevState.forecast\n    ) {\n\n    }\n  }\n  \nget48hForecast = (id) => {\n  API.getRegionId48HrsData(id).then(info => this.setState({forecast: info.data}))\n}\n\ngetRemainingForecast = (id)\n\n\n  compileRegionIndex = () => {\n    API.getCurrentRegionalData().then(info => info.data[0].regions.map(item => {\n          this.setState({\n              regionIndex: \n                [...this.state.regionIndex,\n                {id: item.regionid,\n                name: item.shortname}]\n                }\n          )\n       }\n      )\n    )\n}\n  \n  \n  render() {\n    return (\n\n\n<Router>\n\n\n<div>\n     \n<Nav />\n\n<Switch>\n\n\n    <Route exact path=\"/\">\n          <Start />\n    </Route>\n    <Route path=\"/start\">\n          <Start />\n    </Route>\n    <Route path=\"/forecast\">\n          <Forecast />\n    </Route>\n    <Route path=\"/advice\">\n          <Advice />\n    </Route>\n    <Route path=\"/about\">\n          <About />\n    </Route>\n\n</Switch>\n      \n</div>\n\n</Router>\n\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}