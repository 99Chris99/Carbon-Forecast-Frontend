{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Forecast.js\";\nimport React, { Component } from 'react';\nimport { Dropdown, Table, Grid, Image, Segment } from 'semantic-ui-react';\nexport class Forecast extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      period: 48,\n      region: 18\n    };\n    this.periodOptions = [{\n      key: 8,\n      text: '+6 hours',\n      value: 6,\n      image: {\n        avatar: true,\n        src: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg'\n      }\n    }, {\n      key: 8,\n      text: 'Elliot Fu',\n      value: 2,\n      image: {\n        avatar: true,\n        src: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg'\n      }\n    }, {\n      key: 'Stevie Feliciano',\n      text: 'Stevie Feliciano',\n      value: 3,\n      image: {\n        avatar: true,\n        src: 'https://react.semantic-ui.com/images/avatar/small/stevie.jpg'\n      }\n    }];\n\n    this.setPeriod = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        period: data.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" \", React.createElement(Dropdown, {\n      placeholder: \"Region\",\n      selection: true,\n      options: this.periodOptions,\n      onChange: this.setPeriod,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Yep thats right I'm some text!\"))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" \", React.createElement(Dropdown, {\n      placeholder: \"Region\",\n      selection: true,\n      options: this.periodOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Yep thats right I'm some text!\")))));\n  }\n\n}\nexport default Forecast;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Forecast.js"],"names":["React","Component","Dropdown","Table","Grid","Image","Segment","Forecast","state","period","region","periodOptions","key","text","value","image","avatar","src","setPeriod","event","data","console","log","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, Table, Grid, Image, Segment } from 'semantic-ui-react';\n\nexport class Forecast extends Component {\n\n\nstate = {\n    period: 48,\n    region: 18,\n}\n\n\n        periodOptions = [\n            {\n              key: 8,\n              text: '+6 hours',\n              value: 6,\n              image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg' },\n            },\n            {\n              key: 8,\n              text: 'Elliot Fu',\n              value: 2,\n              image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg' },\n            },\n            {\n              key: 'Stevie Feliciano',\n              text: 'Stevie Feliciano',\n              value: 3,\n              image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/stevie.jpg' },\n            },\n          ]\n\n\n\n\n        setPeriod = (event, data) => {\n            console.log(data.value)\n            this.setState({\n                period: data.value\n            })\n        }\n\n\n    render() {\n        return (\n            <div>\n                {/* <h1> Hi, it's me forecast! Hows things?</h1> */}\n\n<Grid columns='2' >\n<Grid.Row>\n   \n   <Grid.Column floated='left'>      \n    <p> <Dropdown\n         placeholder='Region'\n         selection\n         options={this.periodOptions}\n         onChange={this.setPeriod}\n       />\n       </p>\n       </Grid.Column>\n       <Grid.Column floated='left'>\n   <p>Yep thats right I'm some text!</p>\n   </Grid.Column>\n\n</Grid.Row>\n\n\n<Grid.Row>\n   \n    <Grid.Column floated='left'>      \n     <p> <Dropdown\n          placeholder='Region'\n          selection\n          options={this.periodOptions}\n        />\n        </p>\n        </Grid.Column>\n        <Grid.Column floated='left'>\n    <p>Yep thats right I'm some text!</p>\n    </Grid.Column>\n \n </Grid.Row>\n </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}