{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/SummayChart.js\";\nimport React, { PureComponent } from 'react';\nimport { NodeGroup } from 'react-move';\nimport Surface from 'docs/src/components/Surface'; // this is just a responsive SVG\n\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { รง, max } from 'd3-array';\nimport { easeExpInOut } from 'd3-ease'; // **************************************************\n//  SVG Layout\n// **************************************************\n\nconst view = [1000, 450]; // [width, height]\n\nconst trbl = [10, 10, 30, 10]; // [top, right, bottom, left] margins\n\nconst dims = [// Adjusted dimensions [width, height]\nview[0] - trbl[1] - trbl[3], view[1] - trbl[0] - trbl[2]]; // **************************************************\n//  Mock Data\n// **************************************************\n\nconst letters = [{\n  letter: 'A',\n  frequency: 0.08167\n}, {\n  letter: 'B',\n  frequency: 0.01492\n}, {\n  letter: 'C',\n  frequency: 0.02780\n}, {\n  letter: 'D',\n  frequency: 0.04253\n}, {\n  letter: 'E',\n  frequency: 0.12702\n}, {\n  letter: 'F',\n  frequency: 0.02288\n}, {\n  letter: 'G',\n  frequency: 0.02022\n}, {\n  letter: 'H',\n  frequency: 0.06094\n}, {\n  letter: 'I',\n  frequency: 0.06973\n}, {\n  letter: 'J',\n  frequency: 0.00153\n}, {\n  letter: 'K',\n  frequency: 0.00747\n}, {\n  letter: 'L',\n  frequency: 0.04025\n}, {\n  letter: 'M',\n  frequency: 0.02517\n}, {\n  letter: 'N',\n  frequency: 0.06749\n}, {\n  letter: 'O',\n  frequency: 0.07507\n}, {\n  letter: 'P',\n  frequency: 0.01929\n}, {\n  letter: 'Q',\n  frequency: 0.00098\n}, {\n  letter: 'R',\n  frequency: 0.05987\n}, {\n  letter: 'S',\n  frequency: 0.06333\n}, {\n  letter: 'T',\n  frequency: 0.09056\n}, {\n  letter: 'U',\n  frequency: 0.02758\n}, {\n  letter: 'V',\n  frequency: 0.01037\n}, {\n  letter: 'W',\n  frequency: 0.02465\n}, {\n  letter: 'X',\n  frequency: 0.00150\n}, {\n  letter: 'Y',\n  frequency: 0.01971\n}, {\n  letter: 'Z',\n  frequency: 0.00074\n}];\nconst y = scaleLinear().range([dims[1], 0]).domain([0, max(letters, d => d.frequency)]);\n\nclass SummaryChart extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sortAlpha: true\n    };\n\n    this.update = () => {\n      this.setState(state => ({\n        sortAlpha: !state.sortAlpha\n      }));\n    };\n  }\n\n  render() {\n    const sortAlpha = this.state.sortAlpha;\n    const sorted = letters.sort(sortAlpha ? (a, b) => ascending(a.letter, b.letter) : (a, b) => b.frequency - a.frequency).slice(0);\n    const scale = scaleBand().rangeRound([0, dims[0]]).domain(sorted.map(d => d.letter)).padding(0.1);\n    const width = scale.bandwidth();\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Sort \".concat(sortAlpha ? 'Value' : 'Alpha')), React.createElement(Surface, {\n      view: view,\n      trbl: trbl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(NodeGroup, {\n      data: sorted,\n      keyAccessor: d => d.letter,\n      start: () => ({\n        opacity: 1e-6,\n        x: 1e-6\n      }),\n      enter: d => ({\n        opacity: [0.7],\n        x: [scale(d.letter)],\n        timing: {\n          duration: 750,\n          ease: easeExpInOut\n        }\n      }),\n      update: (d, i) => ({\n        opacity: [0.7],\n        x: [scale(d.letter)],\n        timing: {\n          duration: 750,\n          delay: i * 50,\n          ease: easeExpInOut\n        }\n      }),\n      leave: () => ({\n        opacity: [1e-6],\n        x: [scale.range()[1]],\n        timing: {\n          duration: 750,\n          ease: easeExpInOut\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, nodes => React.createElement(\"g\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, nodes.map(({\n      key,\n      data,\n      state: {\n        x,\n        opacity\n      }\n    }) => React.createElement(\"g\", {\n      key: key,\n      transform: \"translate(\".concat(x, \",0)\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"rect\", {\n      height: dims[1] - y(data.frequency),\n      y: y(data.frequency),\n      fill: \"#ff69b4\",\n      width: width,\n      opacity: opacity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      x: scale.bandwidth() / 2,\n      y: dims[1] + 15,\n      dx: \"-.35em\",\n      fill: \"#dadada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, data.letter)))))));\n  }\n\n}\n\nexport default SummaryChart;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/SummayChart.js"],"names":["React","PureComponent","NodeGroup","Surface","scaleLinear","scaleBand","รง","max","easeExpInOut","view","trbl","dims","letters","letter","frequency","y","range","domain","d","SummaryChart","state","sortAlpha","update","setState","render","sorted","sort","a","b","ascending","slice","scale","rangeRound","map","padding","width","bandwidth","opacity","x","timing","duration","ease","i","delay","nodes","key","data"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { NodeGroup } from 'react-move'\nimport Surface from 'docs/src/components/Surface' // this is just a responsive SVG\nimport { scaleLinear, scaleBand } from 'd3-scale'\nimport { รง, max } from 'd3-array'\nimport { easeExpInOut } from 'd3-ease'\n\n// **************************************************\n//  SVG Layout\n// **************************************************\nconst view = [1000, 450] // [width, height]\nconst trbl = [10, 10, 30, 10] // [top, right, bottom, left] margins\n\nconst dims = [ // Adjusted dimensions [width, height]\n  view[0] - trbl[1] - trbl[3],\n  view[1] - trbl[0] - trbl[2],\n]\n\n// **************************************************\n//  Mock Data\n// **************************************************\nconst letters = [\n  { letter: 'A', frequency: 0.08167 },\n  { letter: 'B', frequency: 0.01492 },\n  { letter: 'C', frequency: 0.02780 },\n  { letter: 'D', frequency: 0.04253 },\n  { letter: 'E', frequency: 0.12702 },\n  { letter: 'F', frequency: 0.02288 },\n  { letter: 'G', frequency: 0.02022 },\n  { letter: 'H', frequency: 0.06094 },\n  { letter: 'I', frequency: 0.06973 },\n  { letter: 'J', frequency: 0.00153 },\n  { letter: 'K', frequency: 0.00747 },\n  { letter: 'L', frequency: 0.04025 },\n  { letter: 'M', frequency: 0.02517 },\n  { letter: 'N', frequency: 0.06749 },\n  { letter: 'O', frequency: 0.07507 },\n  { letter: 'P', frequency: 0.01929 },\n  { letter: 'Q', frequency: 0.00098 },\n  { letter: 'R', frequency: 0.05987 },\n  { letter: 'S', frequency: 0.06333 },\n  { letter: 'T', frequency: 0.09056 },\n  { letter: 'U', frequency: 0.02758 },\n  { letter: 'V', frequency: 0.01037 },\n  { letter: 'W', frequency: 0.02465 },\n  { letter: 'X', frequency: 0.00150 },\n  { letter: 'Y', frequency: 0.01971 },\n  { letter: 'Z', frequency: 0.00074 },\n]\n\nconst y = scaleLinear()\n  .range([dims[1], 0])\n  .domain([0, max(letters, (d) => d.frequency)])\n\nclass SummaryChart extends PureComponent {\n  state = {\n    sortAlpha: true,\n  }\n\n  update = () => {\n    this.setState((state) => ({\n      sortAlpha: !state.sortAlpha,\n    }))\n  }\n\n  render() {\n    const { sortAlpha } = this.state\n\n    const sorted = letters.sort(sortAlpha ?\n      (a, b) => ascending(a.letter, b.letter) :\n      (a, b) => b.frequency - a.frequency,\n    ).slice(0)\n\n    const scale = scaleBand()\n      .rangeRound([0, dims[0]])\n      .domain(sorted.map((d) => d.letter))\n      .padding(0.1)\n\n    const width = scale.bandwidth()\n\n    return (\n      <div style={{ width: '100%' }}>\n        <button onClick={this.update}>\n          {`Sort ${sortAlpha ? 'Value' : 'Alpha'}`}\n        </button>\n        <Surface view={view} trbl={trbl}>\n          <NodeGroup\n            data={sorted}\n            keyAccessor={(d) => d.letter}\n\n            start={() => ({\n              opacity: 1e-6,\n              x: 1e-6,\n            })}\n\n            enter={(d) => ({\n              opacity: [0.7],\n              x: [scale(d.letter)],\n              timing: { duration: 750, ease: easeExpInOut },\n            })}\n\n            update={(d, i) => ({\n              opacity: [0.7],\n              x: [scale(d.letter)],\n              timing: { duration: 750, delay: i * 50, ease: easeExpInOut },\n            })}\n\n            leave={() => ({\n              opacity: [1e-6],\n              x: [scale.range()[1]],\n              timing: { duration: 750, ease: easeExpInOut },\n            })}\n          >\n            {(nodes) => (\n              <g>\n                {nodes.map(({ key, data, state: { x, opacity } }) => (\n                  <g key={key} transform={`translate(${x},0)`}>\n                    <rect\n                      height={dims[1] - y(data.frequency)}\n                      y={y(data.frequency)}\n                      fill=\"#ff69b4\"\n                      width={width}\n                      opacity={opacity}\n                    />\n                    <text\n                      x={scale.bandwidth() / 2}\n                      y={dims[1] + 15}\n                      dx=\"-.35em\"\n                      fill=\"#dadada\"\n                    >{data.letter}</text>\n                  </g>\n                ))}\n              </g>\n            )}\n          </NodeGroup>\n        </Surface>\n      </div>\n    )\n  }\n}\n\nexport default SummaryChart"]},"metadata":{},"sourceType":"module"}