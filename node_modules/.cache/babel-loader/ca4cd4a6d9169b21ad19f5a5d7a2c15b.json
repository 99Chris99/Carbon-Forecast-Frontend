{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport API from './adapters/API';\nimport Nav from './components/Nav';\nimport Start from './components/Start';\nimport Forecast from './components/Forecast';\nimport About from './components/About';\nimport Advice from './components/Advice';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      setRegion: 18,\n      setPostCode: '',\n      useId: true,\n      regionIndex: [{\n        id: 0,\n        name: 'test'\n      }],\n      forecastA: {},\n      forecastB: {},\n      forecastC: {}\n    };\n\n    this.now = () => {\n      let date = new Date();\n      return date.toISOString();\n    };\n\n    this.get48hForecast = start => {\n      if (this.state.useId) {\n        API.getRegionId48HrsData(this.state.setRegion, start).then(info => this.setState({\n          forecastA: info.data.data\n        }));\n      } else {\n        API.getRegionPostCode48HrsData(this.state.setPostCode, start);\n      }\n    };\n\n    this.getForecastB = () => {\n      const start = this.state.forecastA[this.state.forecastA.length - 1].to;\n\n      if (this.state.useId) {\n        API.getRegionId48HrsData(this.state.setRegion, start).then(info => this.setState({\n          forecastB: info.data.data\n        }));\n      } else {\n        API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({\n          forecastB: info.data.data\n        }));\n      }\n    };\n\n    this.getForecastC = () => {\n      const start = this.state.forecastA[this.state.forecastA.length - 1].to;\n\n      if (this.state.useId) {\n        API.getRegionId48HrsData(this.state.setRegion, start).then(info => this.setState({\n          forecastC: info.data.data\n        }));\n      } else {\n        API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({\n          forecastC: info.data.data\n        }));\n      }\n    };\n\n    this.compileRegionIndex = () => {\n      API.getCurrentRegionalData().then(info => info.data[0].regions.map(item => {\n        this.setState({\n          regionIndex: [...this.state.regionIndex, {\n            id: item.regionid,\n            name: item.shortname\n          }]\n        });\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.get48hForecast(this.now());\n    this.compileRegionIndex();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.forecastA !== prevState.forecastA) {\n      return this.getForecastB(this.state.setRegion);\n    } else if (this.state.forecastB !== prevState.forecastB) {\n      return this.getForecastC(this.state.setRegion);\n    }\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Start, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Start, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/forecast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Forecast, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/advice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Advice, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(About, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","API","Nav","Start","Forecast","About","Advice","App","state","setRegion","setPostCode","useId","regionIndex","id","name","forecastA","forecastB","forecastC","now","date","Date","toISOString","get48hForecast","start","getRegionId48HrsData","then","info","setState","data","getRegionPostCode48HrsData","getForecastB","length","to","getForecastC","compileRegionIndex","getCurrentRegionalData","regions","map","item","regionid","shortname","componentDidMount","componentDidUpdate","prevProps","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;AAKA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,OAAO,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAGjCY,KAHiC,GAGzB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,KAAK,EAAE,IAHD;AAINC,MAAAA,WAAW,EAAE,CAAC;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OAAD,CAJP;AAKNC,MAAAA,SAAS,EAAE,EALL;AAMNC,MAAAA,SAAS,EAAE,EANL;AAONC,MAAAA,SAAS,EAAE;AAPL,KAHyB;;AAAA,SAiBnCC,GAjBmC,GAiB7B,MAAM;AACV,UAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,aAAOD,IAAI,CAACE,WAAL,EAAP;AACD,KApBkC;;AAAA,SAsCnCC,cAtCmC,GAsCjBC,KAAD,IAAW;AAC1B,UAAI,KAAKf,KAAL,CAAWG,KAAf,EAAqB;AACnBV,QAAAA,GAAG,CAACuB,oBAAJ,CAAyB,KAAKhB,KAAL,CAAWC,SAApC,EAA+Cc,KAA/C,EAAsDE,IAAtD,CAA2DC,IAAI,IAAI,KAAKC,QAAL,CACjE;AACEZ,UAAAA,SAAS,EAAEW,IAAI,CAACE,IAAL,CAAUA;AADvB,SADiE,CAAnE;AAKD,OAND,MAMM;AACJ3B,QAAAA,GAAG,CAAC4B,0BAAJ,CAA+B,KAAKrB,KAAL,CAAWE,WAA1C,EAAuDa,KAAvD;AACD;AACF,KAhDkC;;AAAA,SAiDnCO,YAjDmC,GAiDpB,MAAM;AACnB,YAAMP,KAAK,GAAG,KAAKf,KAAL,CAAWO,SAAX,CAAqB,KAAKP,KAAL,CAAWO,SAAX,CAAqBgB,MAArB,GAA8B,CAAnD,EAAsDC,EAApE;;AACA,UAAI,KAAKxB,KAAL,CAAWG,KAAf,EAAsB;AACpBV,QAAAA,GAAG,CAACuB,oBAAJ,CAAyB,KAAKhB,KAAL,CAAWC,SAApC,EAA+Cc,KAA/C,EAAsDE,IAAtD,CAA2DC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACX,UAAAA,SAAS,EAAEU,IAAI,CAACE,IAAL,CAAUA;AAAtB,SAAd,CAAnE;AACH,OAFC,MAEG;AACD3B,QAAAA,GAAG,CAAC4B,0BAAJ,CAA+B,KAAKrB,KAAL,CAAWE,WAA1C,EAAuDa,KAAvD,EAA8DE,IAA9D,CAAmEC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACX,UAAAA,SAAS,EAAEU,IAAI,CAACE,IAAL,CAAUA;AAAtB,SAAd,CAA3E;AACD;AACF,KAxDkC;;AAAA,SAyDnCK,YAzDmC,GAyDpB,MAAM;AACnB,YAAMV,KAAK,GAAG,KAAKf,KAAL,CAAWO,SAAX,CAAqB,KAAKP,KAAL,CAAWO,SAAX,CAAqBgB,MAArB,GAA8B,CAAnD,EAAsDC,EAApE;;AACA,UAAI,KAAKxB,KAAL,CAAWG,KAAf,EAAsB;AACpBV,QAAAA,GAAG,CAACuB,oBAAJ,CAAyB,KAAKhB,KAAL,CAAWC,SAApC,EAA+Cc,KAA/C,EAAsDE,IAAtD,CAA2DC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACV,UAAAA,SAAS,EAAES,IAAI,CAACE,IAAL,CAAUA;AAAtB,SAAd,CAAnE;AACH,OAFC,MAEG;AACD3B,QAAAA,GAAG,CAAC4B,0BAAJ,CAA+B,KAAKrB,KAAL,CAAWE,WAA1C,EAAuDa,KAAvD,EAA8DE,IAA9D,CAAmEC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACV,UAAAA,SAAS,EAAES,IAAI,CAACE,IAAL,CAAUA;AAAtB,SAAd,CAA3E;AACD;AACF,KAhEkC;;AAAA,SAsEjCM,kBAtEiC,GAsEZ,MAAM;AACzBjC,MAAAA,GAAG,CAACkC,sBAAJ,GAA6BV,IAA7B,CAAkCC,IAAI,IAAIA,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaQ,OAAb,CAAqBC,GAArB,CAAyBC,IAAI,IAAI;AACrE,aAAKX,QAAL,CAAc;AACVf,UAAAA,WAAW,EACT,CAAC,GAAG,KAAKJ,KAAL,CAAWI,WAAf,EACA;AAACC,YAAAA,EAAE,EAAEyB,IAAI,CAACC,QAAV;AACAzB,YAAAA,IAAI,EAAEwB,IAAI,CAACE;AADX,WADA;AAFQ,SAAd;AAOF,OARsC,CAA1C;AAWH,KAlFkC;AAAA;;AAsBjCC,EAAAA,iBAAiB,GAAI;AACnB,SAAKnB,cAAL,CAAoB,KAAKJ,GAAL,EAApB;AACA,SAAKgB,kBAAL;AACD;;AAEDQ,EAAAA,kBAAkB,CAAEC,SAAF,EAAaC,SAAb,EAAwB;AACxC,QAAI,KAAKpC,KAAL,CAAWO,SAAX,KAAyB6B,SAAS,CAAC7B,SAAvC,EACA;AACE,aAAO,KAAKe,YAAL,CAAkB,KAAKtB,KAAL,CAAWC,SAA7B,CAAP;AACD,KAHD,MAIK,IAAI,KAAKD,KAAL,CAAWQ,SAAX,KAAyB4B,SAAS,CAAC5B,SAAvC,EACL;AACE,aAAO,KAAKiB,YAAL,CAAkB,KAAKzB,KAAL,CAAWC,SAA7B,CAAP;AACD;AACF;;AAiDDoC,EAAAA,MAAM,GAAG;AACP,WAGJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAIA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,CAHJ,EAMI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,CANJ,EASI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,CATJ,EAYI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,CAZJ,EAeI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,CAfJ,CAJA,CAHA,CAHI;AAoCD;;AA1HgC;AA6HnC,eAAetC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport API from './adapters/API'\nimport Nav from './components/Nav';\nimport Start from './components/Start';\nimport Forecast from './components/Forecast';\nimport About from './components/About';\nimport Advice from './components/Advice';\n\n\nexport class App extends Component {\n  \n  \n  state = {\n    setRegion: 18,\n    setPostCode: '',\n    useId: true,\n    regionIndex: [{id: 0, name: 'test'}],\n    forecastA: {},\n    forecastB: {},\n    forecastC: {}\n  }\n  \n  \n//2017-08-25T12:35Z\n\n\nnow = () => {\n  let date = new Date();\n  return date.toISOString()\n}\n\n  componentDidMount () {\n    this.get48hForecast(this.now())\n    this.compileRegionIndex()\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (this.state.forecastA !== prevState.forecastA)\n    {\n      return this.getForecastB(this.state.setRegion)\n    }\n    else if (this.state.forecastB !== prevState.forecastB)\n    {\n      return this.getForecastC(this.state.setRegion)\n    }\n  }\n  \nget48hForecast = (start) => {\n  if (this.state.useId){\n    API.getRegionId48HrsData(this.state.setRegion, start).then(info => this.setState(\n      {\n        forecastA: info.data.data\n      }\n      ))\n  }else {\n    API.getRegionPostCode48HrsData(this.state.setPostCode, start)\n  }\n}\ngetForecastB = () => {\n  const start = this.state.forecastA[this.state.forecastA.length - 1].to\n  if (this.state.useId) {\n    API.getRegionId48HrsData(this.state.setRegion, start).then(info => this.setState({forecastB: info.data.data}))\n}else{\n    API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({forecastB: info.data.data}))\n  } \n}\ngetForecastC = () => {\n  const start = this.state.forecastA[this.state.forecastA.length - 1].to\n  if (this.state.useId) {\n    API.getRegionId48HrsData(this.state.setRegion, start).then(info => this.setState({forecastC: info.data.data}))\n}else{\n    API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({forecastC: info.data.data}))\n  } \n}\n\n\n\n\n\n  compileRegionIndex = () => {\n    API.getCurrentRegionalData().then(info => info.data[0].regions.map(item => {\n          this.setState({\n              regionIndex: \n                [...this.state.regionIndex,\n                {id: item.regionid,\n                name: item.shortname}]\n                }\n          )\n       }\n      )\n    )\n}\n  \n  \n  render() {\n    return (\n\n\n<Router>\n\n\n<div>\n     \n<Nav />\n\n<Switch>\n\n\n    <Route exact path=\"/\">\n          <Start />\n    </Route>\n    <Route path=\"/start\">\n          <Start />\n    </Route>\n    <Route path=\"/forecast\">\n          <Forecast />\n    </Route>\n    <Route path=\"/advice\">\n          <Advice />\n    </Route>\n    <Route path=\"/about\">\n          <About />\n    </Route>\n\n</Switch>\n      \n</div>\n\n</Router>\n\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}