{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Timeline.js\";\nimport React, { Component } from 'react';\nimport { XYPlot, LineSeries, HorizontalGridLines, XAxis, YAxis, Borders, VerticalGridLines, HorizontalBarSeries, GradientDefs, AreaSeries, FlexibleXYPlot, LabelSeries } from 'react-vis';\nexport class Timeline extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rawData: [{\n        y: 1,\n        x: 0\n      }, {\n        y: 2,\n        x: 10\n      }, {\n        y: 3,\n        x: 20\n      }, {\n        y: 4,\n        x: 30\n      }, {\n        y: 5,\n        x: 40\n      }, {\n        y: 6,\n        x: 50\n      }, {\n        y: 7,\n        x: 60\n      }, {\n        y: 8,\n        x: 70\n      }, {\n        y: 9,\n        x: 80\n      }, {\n        y: 10,\n        x: 90\n      }],\n      barPosition: {\n        date: '',\n        offset: 0\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"timeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        // display: 'flex',\n        justifyContent: 'space-between',\n        position: 'relative',\n        width: '100%',\n        //height: '50vh',\n        height: '150vh',\n        overflow: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        border: '1px solid #ccc'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(FlexibleXYPlot, {\n      Type: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(GradientDefs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"linearGradient\", {\n      id: \"CoolGradient\",\n      y1: \"0\",\n      y2: \"0\",\n      x1: \"0\",\n      x2: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"stop\", {\n      offset: \"0%\",\n      stopColor: \"green\",\n      stopOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: \"50%\",\n      stopColor: \"yellow\",\n      stopOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: \"100%\",\n      stopColor: \"red\",\n      stopOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))), React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      tickValues: [0, 1, 3, 4, 5],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(HorizontalBarSeries, {\n      data: this.state.rawData,\n      color: 'url(#CoolGradient)',\n      animation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))))));\n  }\n\n}\nexport default Timeline;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Timeline.js"],"names":["React","Component","XYPlot","LineSeries","HorizontalGridLines","XAxis","YAxis","Borders","VerticalGridLines","HorizontalBarSeries","GradientDefs","AreaSeries","FlexibleXYPlot","LabelSeries","Timeline","state","rawData","y","x","barPosition","date","offset","render","justifyContent","position","width","height","overflow","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {XYPlot, LineSeries, HorizontalGridLines, XAxis, YAxis, Borders, VerticalGridLines, HorizontalBarSeries, GradientDefs, AreaSeries, FlexibleXYPlot, LabelSeries} from 'react-vis';\n\nexport class Timeline extends Component {\n\n    state = {\n        rawData: [{y: 1, x: 0},\n            {y: 2, x: 10},\n            {y: 3, x: 20},\n            {y: 4, x: 30},\n            {y: 5, x: 40},\n            {y: 6, x: 50},\n            {y: 7, x: 60},\n            {y: 8, x: 70},\n            {y: 9, x: 80},\n            {y: 10, x: 90}],\n        barPosition: {date: '', offset: 0}\n    }\n\n\n    render() {\n        return (\n            <div>\n                \n\n                <div id=\"timeline\">\n<div\n      style={{\n       // display: 'flex',\n        justifyContent: 'space-between',\n        position: 'relative',\n        width:  '100%',\n        //height: '50vh',\n        height: '150vh',\n        overflow: 'auto',\n      }}\n    \n    >\n<div\n        style={{width: '100%', height: '100%', border: '1px solid #ccc'}}\n      >\n        <FlexibleXYPlot Type=\"time\">\n        \n        <GradientDefs>\n          <linearGradient id=\"CoolGradient\" y1=\"0\" y2=\"0\" x1=\"0\" x2=\"1\">\n            <stop offset=\"0%\" stopColor=\"green\" stopOpacity={0.4}/>\n            <stop offset=\"50%\" stopColor=\"yellow\" stopOpacity={0.4}/>\n            <stop offset=\"100%\" stopColor=\"red\" stopOpacity={0.4} />\n          </linearGradient>\n        </GradientDefs>\n\n        <VerticalGridLines />\n        <HorizontalGridLines />\n     \n        {/* <YAxis \n        position=\"start\"\n        tickTotal={2}\n        // top={40}\n        top={0}\n        //height={150}\n        //width={1}\n        style={{\n            text: {stroke: 'none', fill: '#6b6b76', fontWeight: 800, fontSize: 10}\n          }}\n          //tickLabelAngle={-45}\n          /> */}\n        \n         <YAxis \n         tickValues={[0, 1, 3, 4, 5]} \n         /> \n        \n        <HorizontalBarSeries \n        data={this.state.rawData}\n        color={'url(#CoolGradient)'}\n        animation\n        />\n        {/* \n        <LabelSeries\n                    data={this.state.rawData.map(obj => {\n                        return { ...obj, label: obj.y.toString() }\n                    })}\n                    \n                    animation\n                    labelAnchorX=\"middle\"\n                    labelAnchorY=\"text-before-edge\"\n                    \n                    />\n\n\n\n        <LabelSeries\n        \n                    //data={this.xlabelData('top')}\n                    data={this.state.rawData.map(obj => {\n                        \n                        return { ...obj, y: this.props.mobileUser ? -3 : -18, rotation: this.props.mobileUser ? 90 : 0, label: `${obj.y.split('|')[0]}` }\n                    })}\n                    animation\n                    labelAnchorX={this.props.mobileUser ? \"start\" : \"middle\"}\n                    //labelAnchorY=\"text-before-edge\"\n                    labelAnchorY={this.props.mobileUser ? \"text-after-edge\" : \"baseline\"}\n                    style={{\n                        text: {stroke: 'none', fill: '#6b6b76', fontWeight: 800, fontSize: 10}\n                      }}\n                    />\n        <LabelSeries\n                    data={this.state.rawData.map(obj => {\n\n                        return { ...obj, y: this.props.mobileUser ? -3 :-34, rotation: this.props.mobileUser ? 90 : 0, label: `${obj.y.split('|')[1]}` }\n                    })}\n                    animation\n                    labelAnchorX={this.props.mobileUser ? \"start\" : \"middle\"}\n                    //labelAnchorY=\"text-before-edge\"\n                    //labelAnchorY=\"baseline\"\n                    labelAnchorY={this.props.mobileUser ? \"text-before-edge\" : \"baseline\"}\n                    style={{\n                        text: {stroke: 'none', fill: '#6b6b76', fontWeight: 800, fontSize: 10}\n                      }}\n                    /> */}\n\n\n\n        </FlexibleXYPlot>\n      </div>\n\n</div>\n     \n\n        </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}