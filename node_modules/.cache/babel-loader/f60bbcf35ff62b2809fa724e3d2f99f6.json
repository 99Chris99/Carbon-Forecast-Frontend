{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Start.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nexport class Start extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.startMeterValueMaths = () => {\n      const maxVal = 500;\n      let intensityValue = this.props.intensityData.value / maxVal;\n      console.log(intensityValue);\n      console.log(intensityValue * 180);\n      return intensityValue * 180;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Hi there, I'm the start page, hope you are well!\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"startmeter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gauge-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gauge-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gauge-c\",\n      style: {\n        transform: \"rotate(\".concat(this.manageStartMeterValue(), \"deg)\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gauge-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"0%\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), \"Hover On Me\")))));\n  }\n\n}\nexport default Start;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Start.js"],"names":["React","Component","Container","Start","startMeterValueMaths","maxVal","intensityValue","props","intensityData","value","console","log","render","transform","manageStartMeterValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,OAAO,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAQrCG,oBARqC,GAQd,MAAM;AACjB,YAAMC,MAAM,GAAG,GAAf;AACA,UAAIC,cAAc,GAAG,KAAKC,KAAL,CAAWC,aAAX,CAAyBC,KAAzB,GAAiCJ,MAAtD;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,cAAc,GAAG,GAA7B;AACA,aAAOA,cAAc,GAAG,GAAxB;AACX,KAdoC;AAAA;;AAgBjCM,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADA,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAER;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,EAEF;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,EAGF;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,mBAAW,KAAKC,qBAAL,EAAX;AAAV,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHE,EAIF;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B;AAAI,MAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA5B,EAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApD,gBAJE,CAFQ,CADA,CAJA,CADJ;AAmBH;;AApCgC;AAuCrC,eAAeX,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\n\nexport class Start extends Component {\n\n\ncomponentDidUpdate\n\nmanageStartMeterValue\n\n\nstartMeterValueMaths = () => {\n            const maxVal = 500;\n            let intensityValue = this.props.intensityData.value / maxVal\n            console.log(intensityValue)\n            console.log(intensityValue * 180)\n            return intensityValue * 180           \n}\n\n    render() {\n        return (\n            <div>\n            <div>\n            <h1>Hi there, I'm the start page, hope you are well!</h1>   \n            </div>\n            <div>\n            <Container>\n        \n    <div className=\"startmeter\">\n\t\t<div className=\"gauge-a\"></div>\n\t\t<div className=\"gauge-b\"></div>\n\t\t<div className=\"gauge-c\" style={{transform:`rotate(${this.manageStartMeterValue()}deg)`}}></div>\n\t\t<div className=\"gauge-data\"><h1 id=\"percent\">0%</h1><br></br>Hover On Me</div>\n\t</div>\n    </Container>\n    </div>\n    </div>\n            \n        );\n    }\n}\n\nexport default Start;"]},"metadata":{},"sourceType":"module"}