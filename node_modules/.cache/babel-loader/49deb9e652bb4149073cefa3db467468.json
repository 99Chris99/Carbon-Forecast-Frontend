{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/SummayChart.js\";\nimport React, { Component } from \"react\";\nimport NodeGroup from \"react-move/NodeGroup\";\nimport { getInitialData, getAppendedData, getTruncatedData, getUpdatedData } from \"./helpers\";\nimport \"./barchart.css\";\nlet barHeight = 25;\nlet barPadding = 2;\nlet barColour = \"#348AA7\";\n\nlet widthScale = d => d * 5;\n\nfunction BarGroup(props) {\n  let width = widthScale(props.state.value);\n  let yMid = barHeight * 0.5;\n  return React.createElement(\"g\", {\n    className: \"bar-group\",\n    transform: \"translate(0, \".concat(props.state.y, \")\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    y: barPadding * 0.5,\n    width: width,\n    height: barHeight - barPadding,\n    style: {\n      fill: barColour,\n      opacity: props.state.opacity\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    className: \"value-label\",\n    x: width - 6,\n    y: yMid,\n    alignmentBaseline: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.state.value.toFixed(0)), React.createElement(\"text\", {\n    className: \"name-label\",\n    x: \"-6\",\n    y: yMid,\n    alignmentBaseline: \"middle\",\n    style: {\n      opacity: props.state.opacity\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.data.name));\n}\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: getInitialData()\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  handleAdd() {\n    this.setState({\n      data: getAppendedData(this.state.data)\n    });\n  }\n\n  handleRemove() {\n    this.setState({\n      data: getTruncatedData(this.state.data)\n    });\n  }\n\n  handleUpdate() {\n    this.setState({\n      data: getUpdatedData(this.state.data)\n    });\n  }\n\n  startTransition(d, i) {\n    return {\n      value: 0,\n      y: i * barHeight,\n      opacity: 0\n    };\n  }\n\n  enterTransition(d) {\n    return {\n      value: [d.value],\n      opacity: [1],\n      timing: {\n        duration: 250\n      }\n    };\n  }\n\n  updateTransition(d, i) {\n    return {\n      value: [d.value],\n      y: [i * barHeight],\n      timing: {\n        duration: 300\n      }\n    };\n  }\n\n  leaveTransition(d) {\n    return {\n      y: [-barHeight],\n      opacity: [0],\n      timing: {\n        duration: 250\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Add item\"), React.createElement(\"button\", {\n      onClick: this.handleRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Remove item\"), React.createElement(\"button\", {\n      onClick: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Update values\")), React.createElement(\"svg\", {\n      width: \"800\",\n      height: \"2200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      className: \"chart\",\n      transform: \"translate(100,10)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(NodeGroup, {\n      data: this.state.data,\n      keyAccessor: d => d.name,\n      start: this.startTransition,\n      enter: this.enterTransition,\n      update: this.updateTransition,\n      leave: this.leaveTransition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, nodes => React.createElement(\"g\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, nodes.map(({\n      key,\n      data,\n      state\n    }) => React.createElement(BarGroup, {\n      key: key,\n      data: data,\n      state: state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/SummayChart.js"],"names":["React","Component","NodeGroup","getInitialData","getAppendedData","getTruncatedData","getUpdatedData","barHeight","barPadding","barColour","widthScale","d","BarGroup","props","width","state","value","yMid","y","fill","opacity","toFixed","data","name","BarChart","constructor","handleAdd","bind","handleRemove","handleUpdate","setState","startTransition","i","enterTransition","timing","duration","updateTransition","leaveTransition","render","nodes","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NodeGroup from \"react-move/NodeGroup\";\nimport {\n  getInitialData,\n  getAppendedData,\n  getTruncatedData,\n  getUpdatedData\n} from \"./helpers\";\nimport \"./barchart.css\";\n\nlet barHeight = 25;\nlet barPadding = 2;\nlet barColour = \"#348AA7\";\nlet widthScale = d => d * 5;\n\nfunction BarGroup(props) {\n  let width = widthScale(props.state.value);\n  let yMid = barHeight * 0.5;\n\n  return (\n    <g className=\"bar-group\" transform={`translate(0, ${props.state.y})`}>\n      <rect\n        y={barPadding * 0.5}\n        width={width}\n        height={barHeight - barPadding}\n        style={{ fill: barColour, opacity: props.state.opacity }}\n      />\n      <text\n        className=\"value-label\"\n        x={width - 6}\n        y={yMid}\n        alignmentBaseline=\"middle\"\n      >\n        {props.state.value.toFixed(0)}\n      </text>\n      <text\n        className=\"name-label\"\n        x=\"-6\"\n        y={yMid}\n        alignmentBaseline=\"middle\"\n        style={{ opacity: props.state.opacity }}\n      >\n        {props.data.name}\n      </text>\n    </g>\n  );\n}\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: getInitialData()\n    };\n\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  handleAdd() {\n    this.setState({\n      data: getAppendedData(this.state.data)\n    });\n  }\n\n  handleRemove() {\n    this.setState({\n      data: getTruncatedData(this.state.data)\n    });\n  }\n\n  handleUpdate() {\n    this.setState({\n      data: getUpdatedData(this.state.data)\n    });\n  }\n\n  startTransition(d, i) {\n    return { value: 0, y: i * barHeight, opacity: 0 };\n  }\n\n  enterTransition(d) {\n    return { value: [d.value], opacity: [1], timing: { duration: 250 } };\n  }\n\n  updateTransition(d, i) {\n    return { value: [d.value], y: [i * barHeight], timing: { duration: 300 } };\n  }\n\n  leaveTransition(d) {\n    return { y: [-barHeight], opacity: [0], timing: { duration: 250 } };\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"menu\">\n          <button onClick={this.handleAdd}>Add item</button>\n          <button onClick={this.handleRemove}>Remove item</button>\n          <button onClick={this.handleUpdate}>Update values</button>\n        </div>\n        <svg width=\"800\" height=\"2200\">\n          <g className=\"chart\" transform=\"translate(100,10)\">\n            <NodeGroup\n              data={this.state.data}\n              keyAccessor={d => d.name}\n              start={this.startTransition}\n              enter={this.enterTransition}\n              update={this.updateTransition}\n              leave={this.leaveTransition}\n            >\n              {nodes => (\n                <g>\n                  {nodes.map(({ key, data, state }) => (\n                    <BarGroup key={key} data={data} state={state} />\n                  ))}\n                </g>\n              )}\n            </NodeGroup>\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}