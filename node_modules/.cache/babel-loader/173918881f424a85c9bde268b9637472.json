{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/PostCodeSearch.js\";\nimport _ from 'lodash';\nimport PostcodeJsLkp from '../content/PostcodeJsLkp';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n}; // const source = ([{\n//   title: `faker.company.companyName()`,\n//   description: 'faker.company.catchPhrase()',\n//   //image: 'faker.internet.avatar()',\n//   price: 100},\n//   {title: `A`,\n//   description: 'AAaaaa',\n// //   image: 'faker.internet.avatar()',\n//   price: 234,\n// }]\n\nconst source = PostcodeJsLkp.postcodes;\nexport default class PostCodeSearch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.results == !prevState.results && this.state.results.length === 1) {\n      return this.props.updatePostCode(this.state.value);\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Search, Object.assign({\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: $results[0]\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/PostCodeSearch.js"],"names":["_","PostcodeJsLkp","React","Component","Search","Grid","Header","Segment","initialState","isLoading","results","value","source","postcodes","PostCodeSearch","state","handleResultSelect","e","result","setState","title","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filter","componentDidUpdate","prevProps","prevState","props","updatePostCode","render","debounce","leading","$results"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,OAA/B,QAA8C,mBAA9C;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,OAAO,EAAE,EAA7B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAArB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GACRX,aAAa,CAACY,SADlB;AAMA,eAAe,MAAMC,cAAN,SAA6BX,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACpDY,KADoD,GAC5CP,YAD4C;;AAAA,SAGpDQ,kBAHoD,GAG/B,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAmB,KAAKC,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAEO,MAAM,CAACE;AAAhB,KAAd,CAHY;;AAAA,SAKpDC,kBALoD,GAK/B,CAACJ,CAAD,EAAI;AAAEN,MAAAA;AAAF,KAAJ,KAAkB;AACrC,WAAKQ,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAE,IAAb;AAAmBE,QAAAA;AAAnB,OAAd;AAEAW,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI,KAAKP,KAAL,CAAWJ,KAAX,CAAiBY,MAAjB,GAA0B,CAA9B,EAAiC,OAAO,KAAKJ,QAAL,CAAcX,YAAd,CAAP;AAEjC,cAAMgB,EAAE,GAAG,IAAIC,MAAJ,CAAWzB,CAAC,CAAC0B,YAAF,CAAe,KAAKX,KAAL,CAAWJ,KAA1B,CAAX,EAA6C,GAA7C,CAAX;;AACA,cAAMgB,OAAO,GAAIT,MAAD,IAAYM,EAAE,CAACI,IAAH,CAAQV,MAAM,CAACE,KAAf,CAA5B;;AAEA,aAAKD,QAAL,CAAc;AACZV,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,OAAO,EAAEV,CAAC,CAAC6B,MAAF,CAASjB,MAAT,EAAiBe,OAAjB;AAFG,SAAd;AAID,OAVS,EAUP,GAVO,CAAV;AAWD,KAnBmD;AAAA;;AAqBpDG,EAAAA,kBAAkB,CAAEC,SAAF,EAAaC,SAAb,EAAwB;AAExC,QAAI,KAAKjB,KAAL,CAAWL,OAAX,IAAqB,CAAEsB,SAAS,CAACtB,OAAjC,IAA4C,KAAKK,KAAL,CAAWL,OAAX,CAAmBa,MAAnB,KAA8B,CAA9E,EACA;AACE,aAAQ,KAAKU,KAAL,CAAWC,cAAX,CAA0B,KAAKnB,KAAL,CAAWJ,KAArC,CAAR;AACD;AACF;;AAEDwB,EAAAA,MAAM,GAAG;AAAA,wBAC+B,KAAKpB,KADpC;AAAA,UACCN,SADD,eACCA,SADD;AAAA,UACYE,KADZ,eACYA,KADZ;AAAA,UACmBD,OADnB,eACmBA,OADnB;AAGP,WAEM,oBAAC,MAAD;AACE,MAAA,OAAO,EAAED,SADX;AAEE,MAAA,cAAc,EAAE,KAAKO,kBAFvB;AAGE,MAAA,cAAc,EAAEhB,CAAC,CAACoC,QAAF,CAAW,KAAKf,kBAAhB,EAAoC,GAApC,EAAyC;AACvDgB,QAAAA,OAAO,EAAE;AAD8C,OAAzC,CAHlB;AAME,MAAA,OAAO,EAAE3B,OANX;AAOE,MAAA,KAAK,EAAE4B,QAAQ,CAAC,CAAD;AAPjB,OAQM,KAAKL,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFN;AAcD;;AA9CmD","sourcesContent":["import _ from 'lodash'\nimport PostcodeJsLkp from '../content/PostcodeJsLkp';\nimport React, { Component } from 'react'\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\n\nconst initialState = { isLoading: false, results: [], value: '' }\n\n\n\n\n// const source = ([{\n//   title: `faker.company.companyName()`,\n//   description: 'faker.company.catchPhrase()',\n//   //image: 'faker.internet.avatar()',\n//   price: 100},\n//   {title: `A`,\n//   description: 'AAaaaa',\n// //   image: 'faker.internet.avatar()',\n//   price: 234,\n// }]\n\nconst source = (\n    PostcodeJsLkp.postcodes\n)\n\n\n\nexport default class PostCodeSearch extends Component {\n  state = initialState\n\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState)\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      const isMatch = (result) => re.test(result.title)\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(source, isMatch),\n      })\n    }, 300)\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n\n    if (this.state.results ==! prevState.results && this.state.results.length === 1)\n    {\n      return  this.props.updatePostCode(this.state.value)\n    }\n  }\n\n  render() {\n    const { isLoading, value, results } = this.state\n\n    return (\n      \n          <Search\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            results={results}\n            value={$results[0]}\n            {...this.props}\n          />\n        \n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}