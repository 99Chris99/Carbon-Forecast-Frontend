{"ast":null,"code":"const apiEndpoint = \"https://api.carbonintensity.org.uk/\";\nconst nationalURL = \"\".concat(apiEndpoint, \"intensity/\");\nconst allRegionsURL = \"\".concat(apiEndpoint, \"regional/\");\nconst region48Hrs = \"\".concat(allRegionsURL, \"intensity/\");\nconst id48Hrs = \"\".concat(allRegionsURL, \"intensity/{from}/fw48h/regionid/\");\n\nconst handleErrors = response => {\n  if (!response.ok) {\n    //if (response !== 200) {\n    console.log('run for your lives its an error!!!'); // throw Error(response.statusText, reload());\n  }\n\n  console.log('All good');\n  return response;\n};\n\nconst reload = () => {\n  alert('Error retrieving forecast data, please reload.');\n};\n\nconst getCurrentNationalData = () => fetch(nationalURL, {\n  method: \"GET\"\n}).then(handleErrors).then(response => response.json());\n\nconst getCurrentRegionalData = () => fetch(allRegionsURL, {\n  method: \"GET\"\n}).then(handleErrors).then(response => response.json());\n\nconst getRegionId48HrsData = (idQuery, start) => fetch(\"\".concat(region48Hrs).concat(start, \"/fw48h/regionid/\").concat(idQuery), {\n  method: \"GET\"\n}).then(handleErrors).then(response => response.json());\n\nconst getRegionPostCode48HrsData = (postCodeQuery, start) => fetch(\"\".concat(region48Hrs).concat(start, \"/fw48h/postcode/\").concat(postCodeQuery), {\n  method: \"GET\"\n}).then(handleErrors).then(response => response.json());\n\nexport default {\n  getCurrentNationalData,\n  getCurrentRegionalData,\n  getRegionId48HrsData,\n  getRegionPostCode48HrsData\n};","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/adapters/API.js"],"names":["apiEndpoint","nationalURL","allRegionsURL","region48Hrs","id48Hrs","handleErrors","response","ok","console","log","reload","alert","getCurrentNationalData","fetch","method","then","json","getCurrentRegionalData","getRegionId48HrsData","idQuery","start","getRegionPostCode48HrsData","postCodeQuery"],"mappings":"AAAA,MAAMA,WAAW,wCAAjB;AACA,MAAMC,WAAW,aAAMD,WAAN,eAAjB;AACA,MAAME,aAAa,aAAMF,WAAN,cAAnB;AACA,MAAMG,WAAW,aAAMD,aAAN,eAAjB;AACA,MAAME,OAAO,aAAMF,aAAN,qCAAb;;AAEA,MAAMG,YAAY,GAAIC,QAAD,IAAc;AAC/B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAClB;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAFc,CAId;AACH;;AACDD,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,SAAOH,QAAP;AACH,CATD;;AAWA,MAAMI,MAAM,GAAG,MAAM;AACjBC,EAAAA,KAAK,CAAC,gDAAD,CAAL;AACH,CAFD;;AAIA,MAAMC,sBAAsB,GAAG,MAAMC,KAAK,CAACZ,WAAD,EAAa;AAACa,EAAAA,MAAM,EAAE;AAAT,CAAb,CAAL,CAAmCC,IAAnC,CAAwCV,YAAxC,EAAsDU,IAAtD,CAA2DT,QAAQ,IAAIA,QAAQ,CAACU,IAAT,EAAvE,CAArC;;AACA,MAAMC,sBAAsB,GAAG,MAAMJ,KAAK,CAACX,aAAD,EAAe;AAACY,EAAAA,MAAM,EAAE;AAAT,CAAf,CAAL,CAAqCC,IAArC,CAA0CV,YAA1C,EAAwDU,IAAxD,CAA6DT,QAAQ,IAAIA,QAAQ,CAACU,IAAT,EAAzE,CAArC;;AACA,MAAME,oBAAoB,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoBP,KAAK,WAAIV,WAAJ,SAAkBiB,KAAlB,6BAA0CD,OAA1C,GAAoD;AAACL,EAAAA,MAAM,EAAE;AAAT,CAApD,CAAL,CAA0EC,IAA1E,CAA+EV,YAA/E,EAA6FU,IAA7F,CAAkGT,QAAQ,IAAIA,QAAQ,CAACU,IAAT,EAA9G,CAAjD;;AACA,MAAMK,0BAA0B,GAAG,CAACC,aAAD,EAAgBF,KAAhB,KAA0BP,KAAK,WAAIV,WAAJ,SAAkBiB,KAAlB,6BAA0CE,aAA1C,GAA0D;AAACR,EAAAA,MAAM,EAAE;AAAT,CAA1D,CAAL,CAAgFC,IAAhF,CAAqFV,YAArF,EAAmGU,IAAnG,CAAwGT,QAAQ,IAAIA,QAAQ,CAACU,IAAT,EAApH,CAA7D;;AAIA,eAAe;AACXJ,EAAAA,sBADW;AAEXK,EAAAA,sBAFW;AAGXC,EAAAA,oBAHW;AAIXG,EAAAA;AAJW,CAAf","sourcesContent":["const apiEndpoint = `https://api.carbonintensity.org.uk/`\nconst nationalURL = `${apiEndpoint}intensity/`\nconst allRegionsURL = `${apiEndpoint}regional/`\nconst region48Hrs = `${allRegionsURL}intensity/`\nconst id48Hrs = `${allRegionsURL}intensity/{from}/fw48h/regionid/`\n\nconst handleErrors = (response) => {\n    if (!response.ok) {\n    //if (response !== 200) {\n        console.log('run for your lives its an error!!!')\n       \n        // throw Error(response.statusText, reload());\n    }\n    console.log('All good')\n    return response;\n}\n\nconst reload = () => {\n    alert('Error retrieving forecast data, please reload.')\n}\n\nconst getCurrentNationalData = () => fetch(nationalURL,{method: \"GET\"}).then(handleErrors).then(response => response.json())\nconst getCurrentRegionalData = () => fetch(allRegionsURL,{method: \"GET\"}).then(handleErrors).then(response => response.json())\nconst getRegionId48HrsData = (idQuery, start) => fetch(`${region48Hrs}${start}/fw48h/regionid/${idQuery}`,{method: \"GET\"}).then(handleErrors).then(response => response.json())\nconst getRegionPostCode48HrsData = (postCodeQuery, start) => fetch(`${region48Hrs}${start}/fw48h/postcode/${postCodeQuery}`,{method: \"GET\"}).then(handleErrors).then(response => response.json())\n\n\n\nexport default {\n    getCurrentNationalData,\n    getCurrentRegionalData,\n    getRegionId48HrsData,\n    getRegionPostCode48HrsData\n}"]},"metadata":{},"sourceType":"module"}