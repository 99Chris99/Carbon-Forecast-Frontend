{"ast":null,"code":"import _defineProperty from \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/SummaryChart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react'; // import './App.css';\n// import '../node_modules/react-vis/dist/style.css';\n\nimport { XYPlot, LineSeries, HorizontalGridLines, XAxis, YAxis, VerticalGridLines, VerticalBarSeries, GradientDefs, AreaSeries, FlexibleXYPlot, LabelSeries } from 'react-vis';\nimport { ItemMeta } from 'semantic-ui-react';\n\nclass SummaryChart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.formatData = () => {\n      let data = [];\n      this.props.aggedVals.map(item => {\n        let bar = {\n          x: item.from,\n          y: item.level\n        };\n        return data = [...data, bar];\n      });\n      console.log(data);\n    };\n  }\n\n  componentDidMount() {\n    this.formatData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.aggedVals !== prevProps.aggedVals) {\n      this.formatData();\n    }\n  }\n\n  render() {\n    const data = [{\n      x: 0,\n      y: 8\n    }, {\n      x: 1,\n      y: 5\n    }, {\n      x: 2,\n      y: 4\n    }, {\n      x: 3,\n      y: 9\n    }, {\n      x: 4,\n      y: 1\n    }, {\n      x: 5,\n      y: 7\n    }, {\n      x: 6,\n      y: 6\n    }, {\n      x: 7,\n      y: 3\n    }, {\n      x: 8,\n      y: 2\n    }, {\n      x: 9,\n      y: 0\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        position: 'relative',\n        width: '100%',\n        height: '30vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '99%',\n        height: '100%',\n        border: '1px solid #ccc'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FlexibleXYPlot, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(GradientDefs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"linearGradient\", {\n      id: \"CoolGradient\",\n      x1: \"0\",\n      x2: \"0\",\n      y1: \"0\",\n      y2: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"stop\", {\n      offset: \"0%\",\n      stopColor: \"red\",\n      stopOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: \"50%\",\n      stopColor: \"yellow\",\n      stopOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: \"100%\",\n      stopColor: \"green\",\n      stopOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(VerticalBarSeries, {\n      data: data,\n      color: 'url(#CoolGradient)',\n      animation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(LabelSeries, {\n      data: data.map(obj => {\n        return _objectSpread({}, obj, {\n          label: obj.y.toString()\n        });\n      }),\n      animation: true,\n      labelAnchorX: \"middle\",\n      labelAnchorY: \"text-before-edge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default SummaryChart;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/SummaryChart.js"],"names":["React","Component","XYPlot","LineSeries","HorizontalGridLines","XAxis","YAxis","VerticalGridLines","VerticalBarSeries","GradientDefs","AreaSeries","FlexibleXYPlot","LabelSeries","ItemMeta","SummaryChart","formatData","data","props","aggedVals","map","item","bar","x","from","y","level","console","log","componentDidMount","componentDidUpdate","prevProps","prevState","render","display","justifyContent","position","width","height","border","obj","label","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import './App.css';\n// import '../node_modules/react-vis/dist/style.css';\nimport {XYPlot, LineSeries, HorizontalGridLines, XAxis, YAxis, VerticalGridLines, VerticalBarSeries, GradientDefs, AreaSeries, FlexibleXYPlot, LabelSeries} from 'react-vis';\nimport { ItemMeta } from 'semantic-ui-react';\n\nclass SummaryChart extends Component {\n\n\n    componentDidMount () {\n        this.formatData()\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        if (this.props.aggedVals !== prevProps.aggedVals) {\n            this.formatData()\n        }\n    }\n\n\n    formatData = () => {\n        let data = []\n        \n        this.props.aggedVals.map(item => {\n            let bar = {x: item.from, y:item.level} \n            return data = [...data, bar]\n        })\n        console.log(data)\n    }\n\n  render() {\n    const data = [\n      {x: 0, y: 8},\n      {x: 1, y: 5},\n      {x: 2, y: 4},\n      {x: 3, y: 9},\n      {x: 4, y: 1},\n      {x: 5, y: 7},\n      {x: 6, y: 6},\n      {x: 7, y: 3},\n      {x: 8, y: 2},\n      {x: 9, y: 0}\n    ];\n    return (\n      <div>\n<div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        position: 'relative',\n        width:  '100%',\n        height: '30vh'\n      }}\n    >\n<div\n        style={{width: '99%', height: '100%', border: '1px solid #ccc'}}\n      >\n        <FlexibleXYPlot>\n        <GradientDefs>\n          <linearGradient id=\"CoolGradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stopColor=\"red\" stopOpacity={0.4}/>\n            <stop offset=\"50%\" stopColor=\"yellow\" stopOpacity={0.4}/>\n            <stop offset=\"100%\" stopColor=\"green\" stopOpacity={0.4} />\n          </linearGradient>\n        </GradientDefs>\n\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <VerticalBarSeries \n        data={data}\n        color={'url(#CoolGradient)'}\n        animation\n        />\n        <LabelSeries\n                    data={data.map(obj => {\n                        return { ...obj, label: obj.y.toString() }\n                    })}\n                    animation\n                    labelAnchorX=\"middle\"\n                    labelAnchorY=\"text-before-edge\"\n                    />\n        </FlexibleXYPlot>\n      </div>\n\n</div>\n     \n\n        </div>\n    );\n  }\n}\n\nexport default SummaryChart;\n"]},"metadata":{},"sourceType":"module"}