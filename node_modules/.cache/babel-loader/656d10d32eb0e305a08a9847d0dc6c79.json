{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/SummaryChart.js\";\nimport React, { Component } from 'react'; // import './App.css';\n// import '../node_modules/react-vis/dist/style.css';\n\nimport { XYPlot, LineSeries, HorizontalGridLines, XAxis, YAxis, VerticalGridLines, VerticalBarSeries, GradientDefs, AreaSeries, makeWidthFlexible } from 'react-vis';\n\nconst Plot = ({\n  width,\n  measurements\n}) => React.createElement(XYPlot, {\n  height: 180,\n  width: width,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(VerticalGridLines, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}), React.createElement(HorizontalGridLines, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(XAxis, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}), React.createElement(YAxis, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), React.createElement(LineSeries, {\n  data: measurements,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}));\n\nPlot.propTypes = {\n  width: React.PropTypes.number,\n  measurements: React.PropTypes.array\n};\nPlot.displayName = 'TimeSeriesLineChartPlot';\nconst FlexibleXYPlot = makeWidthFlexible(Plot);\n\nclass SummaryChart extends Component {\n  render() {\n    const data = [{\n      x: 0,\n      y: 8\n    }, {\n      x: 1,\n      y: 5\n    }, {\n      x: 2,\n      y: 4\n    }, {\n      x: 3,\n      y: 9\n    }, {\n      x: 4,\n      y: 1\n    }, {\n      x: 5,\n      y: 7\n    }, {\n      x: 6,\n      y: 6\n    }, {\n      x: 7,\n      y: 3\n    }, {\n      x: 8,\n      y: 2\n    }, {\n      x: 9,\n      y: 0\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(XYPlot, {\n      height: 300,\n      width: width,\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(GradientDefs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"linearGradient\", {\n      id: \"CoolGradient\",\n      x1: \"0\",\n      x2: \"0\",\n      y1: \"0\",\n      y2: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"stop\", {\n      offset: \"0%\",\n      stopColor: \"red\",\n      stopOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: \"100%\",\n      stopColor: \"blue\",\n      stopOpacity: 0.3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))), React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(VerticalBarSeries, {\n      data: data,\n      color: 'url(#CoolGradient)',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SummaryChart;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/SummaryChart.js"],"names":["React","Component","XYPlot","LineSeries","HorizontalGridLines","XAxis","YAxis","VerticalGridLines","VerticalBarSeries","GradientDefs","AreaSeries","makeWidthFlexible","Plot","width","measurements","propTypes","PropTypes","number","array","displayName","FlexibleXYPlot","SummaryChart","render","data","x","y"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import './App.css';\n// import '../node_modules/react-vis/dist/style.css';\nimport {XYPlot, LineSeries, HorizontalGridLines, XAxis, YAxis, VerticalGridLines, VerticalBarSeries, GradientDefs, AreaSeries, makeWidthFlexible} from 'react-vis';\n\n\nconst Plot = ({ width, measurements }) =>\n    <XYPlot\n      height={180}\n      width={width}>\n      <VerticalGridLines />\n      <HorizontalGridLines />\n      <XAxis />\n      <YAxis />\n      <LineSeries data={measurements} />\n    </XYPlot>\n\nPlot.propTypes = { width: React.PropTypes.number, measurements: React.PropTypes.array }\nPlot.displayName = 'TimeSeriesLineChartPlot'\nconst FlexibleXYPlot = makeWidthFlexible(Plot)\n\n\nclass SummaryChart extends Component {\n  render() {\n    const data = [\n      {x: 0, y: 8},\n      {x: 1, y: 5},\n      {x: 2, y: 4},\n      {x: 3, y: 9},\n      {x: 4, y: 1},\n      {x: 5, y: 7},\n      {x: 6, y: 6},\n      {x: 7, y: 3},\n      {x: 8, y: 2},\n      {x: 9, y: 0}\n    ];\n    return (\n      <div>\n\n        \n        <XYPlot height={300} width={width} color=\"red\">\n\n        <GradientDefs>\n          <linearGradient id=\"CoolGradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stopColor=\"red\" stopOpacity={0.4}/>\n            <stop offset=\"100%\" stopColor=\"blue\" stopOpacity={0.3} />\n          </linearGradient>\n        </GradientDefs>\n\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <VerticalBarSeries data={data} color={'url(#CoolGradient)'}/>\n        </XYPlot>\n        </div>\n    );\n  }\n}\n\nexport default SummaryChart;\n"]},"metadata":{},"sourceType":"module"}