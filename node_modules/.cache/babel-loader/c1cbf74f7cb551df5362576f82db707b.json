{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _windowManager = require('./window-manager');\n\nvar _windowManager2 = _interopRequireDefault(_windowManager);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar withWindow = function withWindow(ComposedComponent) {\n  return function (_Component) {\n    _inherits(WindowDecorator, _Component);\n\n    function WindowDecorator() {\n      _classCallCheck(this, WindowDecorator);\n\n      var _this = _possibleConstructorReturn(this, (WindowDecorator.__proto__ || Object.getPrototypeOf(WindowDecorator)).call(this));\n\n      var state = {\n        dimensions: {\n          width: 0,\n          height: 0\n        },\n        breakpoint: null,\n        orientation: null,\n        isTouchDevice: false\n      }; // Check for universal rendering\n\n      if (typeof window !== 'undefined') {\n        _this.windowManager = new _windowManager2.default(); // Initial state\n\n        state.breakpoint = _this.windowManager.getBreakpoint();\n        state.dimensions = _this.windowManager.getDimensions();\n        state.orientation = _this.windowManager.getOrientation();\n        state.isTouchDevice = _this.windowManager.isTouchDevice(); // Bind events\n\n        _this.handleWindowResize = _this.handleWindowResize.bind(_this);\n        window.addEventListener('window-resize', _this.handleWindowResize);\n      }\n\n      _this.state = state;\n      return _this;\n    }\n\n    _createClass(WindowDecorator, [{\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        // Remove and reset interval/animationFrame\n        cancelAnimationFrame(this.animationFrameRef);\n        window.removeEventListener('window-resize', this.handleWindowResize);\n        this.windowManager.removeListener();\n        this.windowManager = null;\n      }\n    }, {\n      key: 'handleWindowResize',\n      value: function handleWindowResize(e) {\n        var _this2 = this;\n\n        var _state = this.state,\n            breakpoint = _state.breakpoint,\n            dimensions = _state.dimensions,\n            orientation = _state.orientation;\n        var newBreakpoint = e.detail.breakpoint;\n        var newDimensions = e.detail.dimensions;\n        var newOrientation = e.detail.orientation; // Update the state only when data has changed\n\n        if (newOrientation !== orientation || newBreakpoint !== breakpoint || newDimensions.width !== dimensions.width || newDimensions.height !== dimensions.height) {\n          cancelAnimationFrame(this.animationFrameRef);\n          this.animationFrameRef = requestAnimationFrame(function () {\n            _this2.setState({\n              breakpoint: newBreakpoint,\n              dimensions: newDimensions,\n              orientation: newOrientation\n            });\n          });\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _state2 = this.state,\n            breakpoint = _state2.breakpoint,\n            dimensions = _state2.dimensions,\n            orientation = _state2.orientation,\n            isTouchDevice = _state2.isTouchDevice;\n        return _react2.default.createElement(ComposedComponent, _extends({}, this.props, {\n          breakpoint: breakpoint,\n          dimensions: dimensions,\n          orientation: orientation,\n          isTouchDevice: isTouchDevice\n        }));\n      }\n    }]);\n\n    return WindowDecorator;\n  }(_react.Component);\n};\n\nexports.default = withWindow;","map":null,"metadata":{},"sourceType":"script"}