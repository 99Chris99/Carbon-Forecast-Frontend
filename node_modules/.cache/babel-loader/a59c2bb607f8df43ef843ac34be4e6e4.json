{"ast":null,"code":"const apiEndpoint = \"https://api.carbonintensity.org.uk/\";\nconst nationalURL = \"\".concat(apiEndpoint, \"intensity/\");\nconst allRegionsURL = \"\".concat(apiEndpoint, \"regional/\");\nconst region48Hrs = \"\".concat(allRegionsURL, \"intensity/\"); //const id48Hrs = `${allRegionsURL}intensity/{from}/fw48h/regionid/`\n\nlet handleErrors = response => {\n  console.log('hihi'); //if (!response.ok) {\n\n  if (response !== 200) {\n    console.log('run for your lives its an error!!!');\n    return alert('Error retrieving forecast data, please reload.'); // throw Error(response.statusText, reload());\n  } //console.log('All good')\n\n\n  return response;\n};\n\nconst reload = () => {\n  alert('Error retrieving forecast data, please reload.');\n};\n\nconst getCurrentNationalData = () => fetch(nationalURL, {\n  method: \"GET\"\n}).then(handleErrors).then(response => response.json());\n\nconst getCurrentRegionalData = () => fetch(allRegionsURL, {\n  method: \"GET\"\n}).then(handleErrors).then(response => response.json());\n\nconst getRegionId48HrsData = (idQuery, start) => fetch(\"\".concat(region48Hrs).concat(start, \"/fw48h/regionid/\").concat(idQuery), {\n  method: \"GET\"\n}).then(handleErrors).then(response => response.json());\n\nconst getRegionPostCode48HrsData = (postCodeQuery, start) => fetch(\"\".concat(region48Hrs).concat(start, \"/fw48h/postcode/\").concat(postCodeQuery), {\n  method: \"GET\"\n}).then(handleErrors).then(response => response.json());\n\nexport default {\n  getCurrentNationalData,\n  getCurrentRegionalData,\n  getRegionId48HrsData,\n  getRegionPostCode48HrsData\n};","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/adapters/API.js"],"names":["apiEndpoint","nationalURL","allRegionsURL","region48Hrs","handleErrors","response","console","log","alert","reload","getCurrentNationalData","fetch","method","then","json","getCurrentRegionalData","getRegionId48HrsData","idQuery","start","getRegionPostCode48HrsData","postCodeQuery"],"mappings":"AAAA,MAAMA,WAAW,wCAAjB;AACA,MAAMC,WAAW,aAAMD,WAAN,eAAjB;AACA,MAAME,aAAa,aAAMF,WAAN,cAAnB;AACA,MAAMG,WAAW,aAAMD,aAAN,eAAjB,C,CACA;;AAEA,IAAIE,YAAY,GAAIC,QAAD,IAAc;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAD6B,CAE7B;;AACA,MAAIF,QAAQ,KAAK,GAAjB,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACD,WAAOC,KAAK,CAAC,gDAAD,CAAZ,CAFmB,CAGlB;AACH,GAP4B,CAQ7B;;;AACA,SAAOH,QAAP;AACH,CAVD;;AAYA,MAAMI,MAAM,GAAG,MAAM;AACjBD,EAAAA,KAAK,CAAC,gDAAD,CAAL;AACH,CAFD;;AAIA,MAAME,sBAAsB,GAAG,MAAMC,KAAK,CAACV,WAAD,EAAa;AAACW,EAAAA,MAAM,EAAE;AAAT,CAAb,CAAL,CAAmCC,IAAnC,CAAwCT,YAAxC,EAAsDS,IAAtD,CAA2DR,QAAQ,IAAIA,QAAQ,CAACS,IAAT,EAAvE,CAArC;;AACA,MAAMC,sBAAsB,GAAG,MAAMJ,KAAK,CAACT,aAAD,EAAe;AAACU,EAAAA,MAAM,EAAE;AAAT,CAAf,CAAL,CAAqCC,IAArC,CAA0CT,YAA1C,EAAwDS,IAAxD,CAA6DR,QAAQ,IAAIA,QAAQ,CAACS,IAAT,EAAzE,CAArC;;AACA,MAAME,oBAAoB,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoBP,KAAK,WAAIR,WAAJ,SAAkBe,KAAlB,6BAA0CD,OAA1C,GAAoD;AAACL,EAAAA,MAAM,EAAE;AAAT,CAApD,CAAL,CAA0EC,IAA1E,CAA+ET,YAA/E,EAA6FS,IAA7F,CAAkGR,QAAQ,IAAIA,QAAQ,CAACS,IAAT,EAA9G,CAAjD;;AACA,MAAMK,0BAA0B,GAAG,CAACC,aAAD,EAAgBF,KAAhB,KAA0BP,KAAK,WAAIR,WAAJ,SAAkBe,KAAlB,6BAA0CE,aAA1C,GAA0D;AAACR,EAAAA,MAAM,EAAE;AAAT,CAA1D,CAAL,CAAgFC,IAAhF,CAAqFT,YAArF,EAAmGS,IAAnG,CAAwGR,QAAQ,IAAIA,QAAQ,CAACS,IAAT,EAApH,CAA7D;;AAIA,eAAe;AACXJ,EAAAA,sBADW;AAEXK,EAAAA,sBAFW;AAGXC,EAAAA,oBAHW;AAIXG,EAAAA;AAJW,CAAf","sourcesContent":["const apiEndpoint = `https://api.carbonintensity.org.uk/`\nconst nationalURL = `${apiEndpoint}intensity/`\nconst allRegionsURL = `${apiEndpoint}regional/`\nconst region48Hrs = `${allRegionsURL}intensity/`\n//const id48Hrs = `${allRegionsURL}intensity/{from}/fw48h/regionid/`\n\nlet handleErrors = (response) => {\n    console.log('hihi')\n    //if (!response.ok) {\n    if (response !== 200) {\n        console.log('run for your lives its an error!!!')\n       return alert('Error retrieving forecast data, please reload.')\n        // throw Error(response.statusText, reload());\n    }\n    //console.log('All good')\n    return response;\n}\n\nconst reload = () => {\n    alert('Error retrieving forecast data, please reload.')\n}\n\nconst getCurrentNationalData = () => fetch(nationalURL,{method: \"GET\"}).then(handleErrors).then(response => response.json())\nconst getCurrentRegionalData = () => fetch(allRegionsURL,{method: \"GET\"}).then(handleErrors).then(response => response.json())\nconst getRegionId48HrsData = (idQuery, start) => fetch(`${region48Hrs}${start}/fw48h/regionid/${idQuery}`,{method: \"GET\"}).then(handleErrors).then(response => response.json())\nconst getRegionPostCode48HrsData = (postCodeQuery, start) => fetch(`${region48Hrs}${start}/fw48h/postcode/${postCodeQuery}`,{method: \"GET\"}).then(handleErrors).then(response => response.json())\n\n\n\nexport default {\n    getCurrentNationalData,\n    getCurrentRegionalData,\n    getRegionId48HrsData,\n    getRegionPostCode48HrsData\n}"]},"metadata":{},"sourceType":"module"}