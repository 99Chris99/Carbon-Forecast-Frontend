{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/FuelMix.js\";\nimport React, { Component } from 'react';\nimport { RadialChart } from 'react-vis';\nimport { Segment } from 'semantic-ui-react';\nexport class FuelMix extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chartData: [{\n        chartData: [{\n          angle: 1,\n          label: 'loading'\n        }],\n        data: '',\n        level: 0,\n        text: 'Loading'\n      }],\n      count: 0,\n      arrayCheck: []\n    };\n\n    this.handleCount = () => {\n      let newCount = this.state.count;\n      newCount += 1;\n\n      if (newCount < this.state.chartData.length) {\n        this.setState({\n          count: newCount\n        });\n      } else {\n        console.log('end of chart');\n      }\n    };\n  }\n\n  componentDidMount() {//   this.formatData()\n    //   this.allForecast()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data) {\n      this.setState({\n        chartData: this.props.data\n      });\n    }\n  }\n\n  render() {\n    const myData = [{\n      angle: 1,\n      color: '#89DAC1',\n      name: 'green',\n      opacity: 0.2\n    }, {\n      angle: 2,\n      color: '#F6D18A',\n      name: 'yellow'\n    }, {\n      angle: 5,\n      color: '#1E96BE',\n      name: 'cyan'\n    }, {\n      angle: 3,\n      color: '#DA70BF',\n      name: 'black'\n    }, {\n      angle: 5,\n      color: '#F6D18A',\n      name: 'yellow again'\n    }];\n    return React.createElement(\"div\", {\n      className: \"bgPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Wow its a lovely day, and as the Fuel Mix I love lovely days!\"), React.createElement(Segment, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => this.handleCount(),\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(RadialChart, {\n      margin: {\n        left: 40,\n        right: 40,\n        top: 10,\n        bottom: 10\n      } //   data={this.state.chartData[this.state.count].chartData}\n      ,\n      data: myData,\n      width: this.props.mobileUser ? 180 : 340,\n      height: this.props.mobileUser ? 180 : 340,\n      showLabels: true,\n      animation: true,\n      radius: 130,\n      labelsRadiusMultiplier: 1.3,\n      labelsStyle: {\n        position: 'relative',\n        fontSize: this.props.mobileUser ? 10 : 16\n      },\n      showLabels: true,\n      style: {\n        stroke: '#fff',\n        strokeWidth: 2\n      },\n      labelsAboveChildren: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default FuelMix;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/FuelMix.js"],"names":["React","Component","RadialChart","Segment","FuelMix","state","chartData","angle","label","data","level","text","count","arrayCheck","handleCount","newCount","length","setState","console","log","componentDidMount","componentDidUpdate","prevProps","prevState","props","render","myData","color","name","opacity","display","left","right","top","bottom","mobileUser","position","fontSize","stroke","strokeWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {RadialChart} from 'react-vis';\nimport { Segment } from 'semantic-ui-react';\n\n\nexport class FuelMix extends Component {\n\n    state = {\n        chartData:[{chartData:[{angle:1, label:'loading'}], data:'', level: 0, text:'Loading'}],\n        count:0,\n        arrayCheck:[]\n    }\n\n    componentDidMount () {\n     //   this.formatData()\n         //   this.allForecast()\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        if (this.props.data !== prevProps.data) {\n            this.setState({chartData:this.props.data})\n        }\n    }\n\n    \n    \n   \n    handleCount = () => {\n       let newCount = this.state.count\n        newCount += 1\n\n        if (newCount < (this.state.chartData.length)){\n        this.setState({\n            count: newCount\n        })}else{console.log('end of chart')}\n    \n    }\n\n\n\n    render() {\n        const myData = [\n            {angle: 1, color: '#89DAC1', name: 'green', opacity: 0.2},\n            {angle: 2, color: '#F6D18A', name: 'yellow'},\n            {angle: 5, color: '#1E96BE', name: 'cyan'},\n            {angle: 3, color: '#DA70BF', name: 'black'},\n            {angle: 5, color: '#F6D18A', name: 'yellow again'}\n          ]\n        \n        \n        return (\n\n\n        <div className=\"bgPanel\">\n            <h2>Wow its a lovely day, and as the Fuel Mix I love lovely days!</h2>\n\n\n<Segment textAlign='center'>\n          {/* <div style={{width:'100%', paddingLeft:'auto', paddingRight:'auto'}}> */}\n          <div onClick={() => this.handleCount()} style={{display: 'inline-block'}}>\n            <RadialChart\n\n  margin={{left: 40, right: 40, top: 10, bottom: 10}}          \n//   data={this.state.chartData[this.state.count].chartData}\n  data={myData}\n  width={this.props.mobileUser ? 180 : 340}\n  height={this.props.mobileUser ? 180 : 340} \n  showLabels={true}\n  animation={true}\n  radius={130}\n  labelsRadiusMultiplier={1.3}\n      labelsStyle={{position: 'relative', fontSize: this.props.mobileUser ? 10 : 16}}\n      showLabels\n      style={{stroke: '#fff', strokeWidth: 2}}\n      labelsAboveChildren={true}\n />\n </div>\n</Segment>\n\n            </div>\n        );\n    }\n}\n\nexport default FuelMix;\n"]},"metadata":{},"sourceType":"module"}