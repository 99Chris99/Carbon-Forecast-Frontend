{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/FuelMix.js\";\nimport React, { Component } from 'react';\nimport { RadialChart } from 'react-vis';\nexport class FuelMix extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charData: [],\n      count: 0,\n      arrayCheck: []\n    };\n\n    this.formatMix = obj => {\n      return obj.map(mix => {\n        return {\n          angle: obj.perc,\n          label: obj.fuel\n        };\n      });\n    };\n\n    this.formatData = () => {\n      let dataSet = this.props.data.map(obj => {\n        return {\n          timePeriod: obj.from,\n          cILevel: obj.intensity.forecast,\n          chartData: this.formatMix(obj.generationmix)\n        };\n      });\n      this.setState({\n        charData: dataSet\n      });\n    };\n  }\n\n  componentDidMount() {//   this.formatData()\n    //   this.allForecast()\n  }\n\n  componentDidUpdate(prevProps, prevState) {// if (this.props.data !== prevProps.data) {\n    //     this.allForecast()\n    // }\n  }\n\n  render() {\n    const myData = [{\n      angle: 1\n    }, {\n      angle: 5\n    }, {\n      angle: 2\n    }];\n    return React.createElement(\"div\", {\n      className: \"bgPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Wow its a lovely day, and as the Fuel Mix I love lovely days!\"), React.createElement(RadialChart, {\n      data: myData,\n      width: 300,\n      height: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default FuelMix;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/FuelMix.js"],"names":["React","Component","RadialChart","FuelMix","state","charData","count","arrayCheck","formatMix","obj","map","mix","angle","perc","label","fuel","formatData","dataSet","props","data","timePeriod","from","cILevel","intensity","forecast","chartData","generationmix","setState","componentDidMount","componentDidUpdate","prevProps","prevState","render","myData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,WAA1B;AAGA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAEnCG,KAFmC,GAE3B;AACJC,MAAAA,QAAQ,EAAC,EADL;AAEJC,MAAAA,KAAK,EAAC,CAFF;AAGJC,MAAAA,UAAU,EAAC;AAHP,KAF2B;;AAAA,SAqBjCC,SArBiC,GAqBpBC,GAAD,IAAS;AACpB,aAAOA,GAAG,CAACC,GAAJ,CAAQC,GAAG,IAAI;AACjB,eAAO;AAACC,UAAAA,KAAK,EAAEH,GAAG,CAACI,IAAZ;AAAkBC,UAAAA,KAAK,EAACL,GAAG,CAACM;AAA5B,SAAP;AACH,OAFK,CAAP;AAGA,KAzBgC;;AAAA,SA2BnCC,UA3BmC,GA2BtB,MAAM;AACjB,UAAIC,OAAO,GAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBT,GAAhB,CAAoBD,GAAG,IAAI;AACrC,eAAO;AACFW,UAAAA,UAAU,EAAEX,GAAG,CAACY,IADd;AAEFC,UAAAA,OAAO,EAAEb,GAAG,CAACc,SAAJ,CAAcC,QAFrB;AAGFC,UAAAA,SAAS,EAAE,KAAKjB,SAAL,CAAeC,GAAG,CAACiB,aAAnB;AAHT,SAAP;AAKF,OANY,CAAf;AAQE,WAAKC,QAAL,CAAc;AAACtB,QAAAA,QAAQ,EAACY;AAAV,OAAd;AACH,KArCkC;AAAA;;AAQnCW,EAAAA,iBAAiB,GAAI,CACpB;AACI;AACJ;;AAEDC,EAAAA,kBAAkB,CAAEC,SAAF,EAAaC,SAAb,EAAwB,CACtC;AACA;AACA;AACH;;AAyBDC,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,CAAC;AAACrB,MAAAA,KAAK,EAAE;AAAR,KAAD,EAAa;AAACA,MAAAA,KAAK,EAAE;AAAR,KAAb,EAAyB;AAACA,MAAAA,KAAK,EAAE;AAAR,KAAzB,CAAf;AACA,WAGA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADJ,EAGI,oBAAC,WAAD;AACV,MAAA,IAAI,EAAEqB,MADI;AAEV,MAAA,KAAK,EAAE,GAFG;AAGV,MAAA,MAAM,EAAE,GAHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAHA;AAcH;;AA1DkC;AA6DvC,eAAe9B,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport {RadialChart} from 'react-vis';\n\n\nexport class FuelMix extends Component {\n\n    state = {\n        charData:[],\n        count:0,\n        arrayCheck:[]\n    }\n\n    componentDidMount () {\n     //   this.formatData()\n         //   this.allForecast()\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        // if (this.props.data !== prevProps.data) {\n        //     this.allForecast()\n        // }\n    }\n\n    \n    \n      formatMix = (obj) => {\n       return obj.map(mix => {\n            return {angle: obj.perc, label:obj.fuel}\n        })\n      }\n\n    formatData = () => {\n      let dataSet =  this.props.data.map(obj => {\n           return {\n                timePeriod: obj.from,\n                cILevel: obj.intensity.forecast,\n                chartData: this.formatMix(obj.generationmix)\n            }\n        })\n\n        this.setState({charData:dataSet})\n    } \n\n\n\n\n    render() {\n        const myData = [{angle: 1}, {angle: 5}, {angle: 2}]\n        return (\n\n\n        <div className=\"bgPanel\">\n            <h2>Wow its a lovely day, and as the Fuel Mix I love lovely days!</h2>\n\n            <RadialChart\n  data={myData}\n  width={300}\n  height={300} />\n\n\n            </div>\n        );\n    }\n}\n\nexport default FuelMix;\n"]},"metadata":{},"sourceType":"module"}