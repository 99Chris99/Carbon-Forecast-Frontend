{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Forecast.js\";\nimport React, { Component } from 'react';\nimport { Dropdown, Table, Grid, Image, Segment, Container } from 'semantic-ui-react';\nimport SummaryChart from './SummaryChart';\nexport class Forecast extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      period: 48,\n      region: 18\n    };\n    this.periodOptions = [{\n      key: 6,\n      text: '+6 hours',\n      value: 6 //   image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg' },\n\n    }, {\n      key: 8,\n      text: '+8 hours',\n      value: 8\n    }, {\n      key: 12,\n      text: '+12 hours',\n      value: 12\n    }, {\n      key: 24,\n      text: '+24 hours',\n      value: 24\n    }, {\n      key: 48,\n      text: '+48 hours',\n      value: 48\n    }, {\n      key: 100,\n      text: 'Max',\n      value: 100\n    }];\n\n    this.genRegionOptions = () => {\n      let output = this.props.regionIndex.map(obj => {\n        return {\n          key: obj.id,\n          text: obj.name,\n          value: obj.id\n        };\n      });\n      output.sort((a, b) => a.key < b.key ? 1 : -1);\n      return output;\n    };\n\n    this.setPeriod = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        period: data.value\n      });\n    };\n\n    this.setRegion = (event, data) => {\n      console.log(data.value);\n      this.setState({\n        region: data.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" \", React.createElement(Dropdown, {\n      placeholder: \"Period\",\n      selection: \"2\",\n      options: this.periodOptions,\n      onChange: (event, data) => this.props.updatePeriod(data.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Yep thats right I'm some text!\"))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" \", React.createElement(Dropdown, {\n      placeholder: \"Region\",\n      selection: true,\n      options: this.genRegionOptions(),\n      onChange: (event, data) => this.props.updateRegion(data.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Yep thats right I'm some text!\"))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(SummaryChart, {\n      aggedVals: this.props.aggedVals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Forecast;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Forecast.js"],"names":["React","Component","Dropdown","Table","Grid","Image","Segment","Container","SummaryChart","Forecast","state","period","region","periodOptions","key","text","value","genRegionOptions","output","props","regionIndex","map","obj","id","name","sort","a","b","setPeriod","event","data","console","log","setState","setRegion","render","updatePeriod","updateRegion","aggedVals"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,OAAvC,EAAgDC,SAAhD,QAAiE,mBAAjE;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAGxCS,KAHwC,GAGhC;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAHgC;AAAA,SAShCC,aATgC,GAShB,CACZ;AACEC,MAAAA,GAAG,EAAE,CADP;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,KAAK,EAAE,CAHT,CAIA;;AAJA,KADY,EAOZ;AACEF,MAAAA,GAAG,EAAE,CADP;AAEEC,MAAAA,IAAI,EAAE,UAFR;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAPY,EAYZ;AACEF,MAAAA,GAAG,EAAE,EADP;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAZY,EAiBZ;AACEF,MAAAA,GAAG,EAAE,EADP;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAjBY,EAsBZ;AACEF,MAAAA,GAAG,EAAE,EADP;AAEEC,MAAAA,IAAI,EAAE,WAFR;AAGEC,MAAAA,KAAK,EAAE;AAHT,KAtBY,EA2BZ;AACEF,MAAAA,GAAG,EAAE,GADP;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,KAAK,EAAE;AAHT,KA3BY,CATgB;;AAAA,SA2C9BC,gBA3C8B,GA2CX,MAAM;AACzB,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CAA2BC,GAAG,IAAI;AACzC,eAAO;AAACR,UAAAA,GAAG,EAAEQ,GAAG,CAACC,EAAV;AAAcR,UAAAA,IAAI,EAAEO,GAAG,CAACE,IAAxB;AAA8BR,UAAAA,KAAK,EAAEM,GAAG,CAACC;AAAzC,SAAP;AACH,OAFU,CAAb;AAGEL,MAAAA,MAAM,CAACO,IAAP,CAAY,CAACC,CAAD,EAAGC,CAAH,KAAUD,CAAC,CAACZ,GAAF,GAAQa,CAAC,CAACb,GAAX,GAAkB,CAAlB,GAAsB,CAAC,CAA5C;AACA,aAAOI,MAAP;AACH,KAjD+B;;AAAA,SAmDhCU,SAnDgC,GAmDpB,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACd,KAAjB;AACA,WAAKiB,QAAL,CAAc;AACVtB,QAAAA,MAAM,EAAEmB,IAAI,CAACd;AADH,OAAd;AAGH,KAxD+B;;AAAA,SAyDhCkB,SAzDgC,GAyDpB,CAACL,KAAD,EAAQC,IAAR,KAAiB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACd,KAAjB;AACA,WAAKiB,QAAL,CAAc;AACVrB,QAAAA,MAAM,EAAEkB,IAAI,CAACd;AADH,OAAd;AAGH,KA9D+B;AAAA;;AAmEpCmB,EAAAA,MAAM,GAAG;AACL,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGZ,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAI,oBAAC,QAAD;AACC,MAAA,WAAW,EAAC,QADb;AAEC,MAAA,SAAS,EAAC,GAFX;AAGC,MAAA,OAAO,EAAE,KAAKtB,aAHf;AAIC,MAAA,QAAQ,EAAE,CAACgB,KAAD,EAAQC,IAAR,KAAiB,KAAKX,KAAL,CAAWiB,YAAX,CAAwBN,IAAI,CAACd,KAA7B,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADD,CAFH,EAWO,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADI,CAXP,CADA,EAmBA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAI,oBAAC,QAAD;AACC,MAAA,WAAW,EAAC,QADb;AAEC,MAAA,SAAS,MAFV;AAGC,MAAA,OAAO,EAAE,KAAKC,gBAAL,EAHV;AAIC,MAAA,QAAQ,EAAE,CAACY,KAAD,EAAQC,IAAR,KAAiB,KAAKX,KAAL,CAAWkB,YAAX,CAAwBP,IAAI,CAACd,KAA7B,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CADD,CAFJ,EAWQ,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADI,CAXR,CAnBA,CAHY,CAFA,EA0CZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAE,KAAKG,KAAL,CAAWmB,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CA1CY,CAFJ;AAkDH;;AAtHmC;AAyHxC,eAAe7B,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, Table, Grid, Image, Segment, Container } from 'semantic-ui-react';\nimport SummaryChart from './SummaryChart'\n\nexport class Forecast extends Component {\n\n\nstate = {\n    period: 48,\n    region: 18,\n}\n\n\n        periodOptions = [\n            {\n              key: 6,\n              text: '+6 hours',\n              value: 6,\n            //   image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg' },\n            },\n            {\n              key: 8,\n              text: '+8 hours',\n              value: 8,\n            },\n            {\n              key: 12,\n              text: '+12 hours',\n              value: 12,\n            },\n            {\n              key: 24,\n              text: '+24 hours',\n              value: 24,\n            },\n            {\n              key: 48,\n              text: '+48 hours',\n              value: 48,\n            },\n            {\n              key: 100,\n              text: 'Max',\n              value: 100,\n            },\n          ]\n\n          genRegionOptions = () => {\n          let output = this.props.regionIndex.map(obj => {\n                return {key: obj.id, text: obj.name, value: obj.id}\n            })\n            output.sort((a,b) => (a.key < b.key) ? 1 : -1)\n            return output\n        }\n\n        setPeriod = (event, data) => {\n            console.log(data.value)\n            this.setState({\n                period: data.value\n            })\n        }\n        setRegion = (event, data) => {\n            console.log(data.value)\n            this.setState({\n                region: data.value\n            })\n        }\n\n\n\n\n    render() {\n        return (\n\n            <div>\n\n            <div>\n                {/* <h1> Hi, it's me forecast! Hows things?</h1> */}\n\n<Grid columns='2' >\n<Grid.Row>\n   \n   <Grid.Column floated='left'>      \n    <p> <Dropdown\n         placeholder='Period'\n         selection='2'\n         options={this.periodOptions}\n         onChange={(event, data) => this.props.updatePeriod(data.value)}\n         />\n       </p>\n       </Grid.Column>\n       <Grid.Column floated='left'>\n   <p>Yep thats right I'm some text!</p>\n   </Grid.Column>\n\n</Grid.Row>\n\n\n<Grid.Row>\n   \n    <Grid.Column floated='left'>      \n     <p> <Dropdown\n          placeholder='Region'\n          selection\n          options={this.genRegionOptions()}\n          onChange={(event, data) => this.props.updateRegion(data.value)}\n        />\n        </p>\n        </Grid.Column>\n        <Grid.Column floated='left'>\n    <p>Yep thats right I'm some text!</p>\n    </Grid.Column>\n \n </Grid.Row>\n </Grid>\n            </div>\n<div>\n\n<SummaryChart aggedVals={this.props.aggedVals}/>\n</div>\n</div>\n        );\n    }\n}\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}