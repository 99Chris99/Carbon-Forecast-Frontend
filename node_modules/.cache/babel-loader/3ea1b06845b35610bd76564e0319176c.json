{"ast":null,"code":"import _defineProperty from \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/SummaryChart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react'; // import './App.css';\n// import '../node_modules/react-vis/dist/style.css';\n\nimport { XYPlot, LineSeries, HorizontalGridLines, XAxis, YAxis, VerticalGridLines, VerticalBarSeries, GradientDefs, AreaSeries, FlexibleXYPlot, LabelSeries } from 'react-vis';\nimport { ItemMeta } from 'semantic-ui-react';\n\nclass SummaryChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rawData: [{\n        x: '0',\n        y: 0\n      }, {\n        x: '0',\n        y: 0\n      }, {\n        x: '0',\n        y: 0\n      }, {\n        x: '0',\n        y: 0\n      }, {\n        x: '0',\n        y: 0\n      }, {\n        x: '0',\n        y: 0\n      }, {\n        x: '0',\n        y: 0\n      }, {\n        x: '0',\n        y: 0\n      }, {\n        x: '0',\n        y: 0\n      }, {\n        x: '0',\n        y: 0\n      }]\n    };\n\n    this.formatData = () => {\n      let data = [];\n\n      if (this.props.aggedVals !== []) {\n        this.props.aggedVals.map(item => {\n          let bar = {\n            x: \"\".concat(item.from),\n            y: item.level\n          };\n          return data = [...data, bar];\n        });\n        console.log(data);\n        this.setState({\n          rawData: data\n        });\n      }\n    };\n\n    this.handleWidth = () => {\n      let width = '100%';\n\n      if (this.props.aggedVals.length > 8) {\n        width = '180%';\n      }\n\n      return width;\n    };\n  }\n\n  componentDidMount() {\n    this.formatData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.aggedVals !== prevProps.aggedVals || this.props.sortTrigger) {\n      this.formatData();\n    }\n  }\n\n  render() {\n    // const data = [\n    //   {x: 0, y: 8},\n    //   {x: 1, y: 5},\n    //   {x: 2, y: 4},\n    //   {x: 3, y: 9},\n    //   {x: 4, y: 1},\n    //   {x: 5, y: 7},\n    //   {x: 6, y: 6},\n    //   {x: 7, y: 3},\n    //   {x: 8, y: 2},\n    //   {x: 9, y: 0}\n    // ];\n    return React.createElement(\"div\", {\n      id: \"summary-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        // display: 'flex',\n        justifyContent: 'space-between',\n        position: 'relative',\n        width: this.handleWidth(),\n        height: '50vh',\n        overflow: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '99%',\n        height: '100%',\n        border: '1px solid #ccc'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(FlexibleXYPlot, {\n      xType: \"ordinal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(GradientDefs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"linearGradient\", {\n      id: \"CoolGradient\",\n      x1: \"0\",\n      x2: \"0\",\n      y1: \"0\",\n      y2: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"stop\", {\n      offset: \"0%\",\n      stopColor: \"red\",\n      stopOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: \"50%\",\n      stopColor: \"yellow\",\n      stopOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"stop\", {\n      offset: \"100%\",\n      stopColor: \"green\",\n      stopOpacity: 0.4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(VerticalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(HorizontalGridLines, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(VerticalBarSeries, {\n      data: this.state.rawData,\n      color: 'url(#CoolGradient)',\n      animation: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(LabelSeries, {\n      data: this.state.rawData.map(obj => {\n        return _objectSpread({}, obj, {\n          label: obj.y.toString()\n        });\n      }),\n      animation: true,\n      labelAnchorX: \"middle\",\n      labelAnchorY: \"text-before-edge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default SummaryChart;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/SummaryChart.js"],"names":["React","Component","XYPlot","LineSeries","HorizontalGridLines","XAxis","YAxis","VerticalGridLines","VerticalBarSeries","GradientDefs","AreaSeries","FlexibleXYPlot","LabelSeries","ItemMeta","SummaryChart","state","rawData","x","y","formatData","data","props","aggedVals","map","item","bar","from","level","console","log","setState","handleWidth","width","length","componentDidMount","componentDidUpdate","prevProps","prevState","sortTrigger","render","justifyContent","position","height","overflow","border","obj","label","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import './App.css';\n// import '../node_modules/react-vis/dist/style.css';\nimport {XYPlot, LineSeries, HorizontalGridLines, XAxis, YAxis, VerticalGridLines, VerticalBarSeries, GradientDefs, AreaSeries, FlexibleXYPlot, LabelSeries} from 'react-vis';\nimport { ItemMeta } from 'semantic-ui-react';\n\nclass SummaryChart extends Component {\n\n    state = {\n        rawData: [{x: '0', y: 0},\n            {x: '0', y: 0},\n            {x: '0', y: 0},\n            {x: '0', y: 0},\n            {x: '0', y: 0},\n            {x: '0', y: 0},\n            {x: '0', y: 0},\n            {x: '0', y: 0},\n            {x: '0', y: 0},\n            {x: '0', y: 0}]\n    }\n\n\n    componentDidMount () {\n        this.formatData()\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        if (this.props.aggedVals !== prevProps.aggedVals || this.props.sortTrigger) {\n            this.formatData()\n        }\n    }\n\n\n    formatData = () => {\n        let data = []\n        \n        if (this.props.aggedVals !== [] ) {\n        this.props.aggedVals.map(item => {\n            let bar = {x: `${item.from}`, y:item.level} \n            return data = [...data, bar]\n        })\n        console.log(data)\n        this.setState({rawData: data})    \n    }\n    }\n\n    handleWidth = () => {\n      let  width = '100%'\n        if (this.props.aggedVals.length > 8) {\n            width = '180%'\n        }\n    return width\n    }\n\n  render() {\n    // const data = [\n    //   {x: 0, y: 8},\n    //   {x: 1, y: 5},\n    //   {x: 2, y: 4},\n    //   {x: 3, y: 9},\n    //   {x: 4, y: 1},\n    //   {x: 5, y: 7},\n    //   {x: 6, y: 6},\n    //   {x: 7, y: 3},\n    //   {x: 8, y: 2},\n    //   {x: 9, y: 0}\n    // ];\n    return (\n      <div id=\"summary-chart\">\n<div\n      style={{\n       // display: 'flex',\n        justifyContent: 'space-between',\n        position: 'relative',\n        width:  this.handleWidth(),\n        height: '50vh',\n        overflow: 'auto',\n      }}\n    \n    >\n<div\n        style={{width: '99%', height: '100%', border: '1px solid #ccc'}}\n      >\n        <FlexibleXYPlot  xType=\"ordinal\">\n        <GradientDefs>\n          <linearGradient id=\"CoolGradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stopColor=\"red\" stopOpacity={0.4}/>\n            <stop offset=\"50%\" stopColor=\"yellow\" stopOpacity={0.4}/>\n            <stop offset=\"100%\" stopColor=\"green\" stopOpacity={0.4} />\n          </linearGradient>\n        </GradientDefs>\n\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <VerticalBarSeries \n        data={this.state.rawData}\n        color={'url(#CoolGradient)'}\n        animation\n        />\n        <LabelSeries\n                    data={this.state.rawData.map(obj => {\n                        return { ...obj, label: obj.y.toString() }\n                    })}\n                    animation\n                    labelAnchorX=\"middle\"\n                    labelAnchorY=\"text-before-edge\"\n                    />\n        </FlexibleXYPlot>\n      </div>\n\n</div>\n     \n\n        </div>\n    );\n  }\n}\n\nexport default SummaryChart;\n"]},"metadata":{},"sourceType":"module"}