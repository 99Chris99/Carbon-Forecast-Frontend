{"ast":null,"code":"import _toConsumableArray from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import logo from\"./logo.svg\";import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import'./App.css';import API from'./adapters/API';import Nav from'./components/Nav';import Start from'./components/Start';import Forecast from'./components/Forecast';import Timeline from'./components/Timeline';import About from'./components/About';import Advice from'./components/Advice';import{ItemMeta}from'semantic-ui-react';import{cloneWithoutLoc}from'@babel/types';import{Container}from'semantic-ui-react';export var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={mobileUser:false,screenWidth:400,setRegion:18,setPostCode:'',useId:true,setPeriod:12,setGran:2,mediumVal:150,middle:150,emissions:0,regionIndex:[],currentLevel:{region:'',text:'',value:0},forecastA:{},forecastB:{},forecastC:{},aggedVals:[],bestPeriods:{},timelineVals:[]};_this.now=function(){var date=new Date();return date.toISOString();};_this.viewport=function(){var e=window;var a='inner';if(!('innerWidth'in window)){a='client';e=document.documentElement||document.body;}var dimentions={width:e[a+'Width'],height:e[a+'Height']};_this.setState({screenWidth:dimentions.width});if(dimentions.width<600){_this.setState({mobileUser:true});}};_this.calMediumLevel=function(){var set=_this.state.timelineVals.map(function(item){return item.level;});var sum=set.reduce(function(acc,cur){return acc+cur;});//console.log(sum)\nvar avg=sum/set.length;_this.setState({mediumVal:Math.round(avg)});};_this.calMiddle=function(){var set=_this.state.timelineVals.map(function(item){return item.level;});var big=set.reduce(function(acc,cur){if(cur>acc){acc=cur;}});//console.log(sum)\nvar avg=big/2;_this.setState({middle:Math.round(avg)});};_this.plus30Mins=function(dateTime){var newTime=dateTime.split(/\\D+/);var output=new Date(Date.UTC(newTime[0],newTime[1]-1,newTime[2],newTime[3],newTime[4],newTime[5]));output.setMinutes(output.getMinutes()+30);var newdateTime=output.toISOString();return newdateTime;};_this.countEmmissions=function(){var count=_this.state.emissions+=0.0142;_this.setState({emissions:count});};_this.get48hForecast=function(start,useID){if(_this.state.useId&&useID){API.getRegionId48HrsData(_this.state.setRegion,start).then(function(info){return _this.setState({forecastA:info.data.data});});}else{// API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({forecastA: info.data.data}, {setRegion: info.data.regionid}))\nAPI.getRegionPostCode48HrsData(_this.state.setPostCode,start).then(function(info){return _this.setState({forecastA:info.data.data});});}};_this.getForecastB=function(){var start=_this.state.forecastA[_this.state.forecastA.length-1].to;var startPlus30=_this.plus30Mins(start);console.log(startPlus30);if(_this.state.useId){API.getRegionId48HrsData(_this.state.setRegion,startPlus30).then(function(info){return _this.setState({forecastB:info.data.data});});}else{API.getRegionPostCode48HrsData(_this.state.setPostCode,startPlus30).then(function(info){return _this.setState({forecastB:info.data.data});});}};_this.getForecastC=function(){var start=_this.state.forecastB[_this.state.forecastB.length-1].to;var startPlus30=_this.plus30Mins(start);if(_this.state.useId){API.getRegionId48HrsData(_this.state.setRegion,startPlus30).then(function(info){return _this.setState({forecastC:info.data.data});});}else{API.getRegionPostCode48HrsData(_this.state.setPostCode,startPlus30).then(function(info){return _this.setState({forecastC:info.data.data});});}};_this.compileRegionIndex=function(){_this.setState({regionIndex:[]});API.getCurrentRegionalData().then(function(info){return info.data[0].regions.map(function(item){_this.setState({regionIndex:[].concat(_toConsumableArray(_this.state.regionIndex),[{id:item.regionid,name:item.shortname}])});if(item.regionid===_this.state.setRegion){_this.setState({currentLevel:{region:item.regionid,text:item.intensity.index,value:item.intensity.forecast}});}});}).then(function(datainfo){return console.log(datainfo);});};_this.allForecast=function(){var allForecast=[].concat(_toConsumableArray(_this.state.forecastA),_toConsumableArray(_this.state.forecastB),_toConsumableArray(_this.state.forecastC));return allForecast;};_this.calTextLevel=function(value){if(value>360){return'Very High';}else if(value>=260&&value<=359){return'High';}else if(value>=160&&value<=259){return'Moderate';}else if(value>=60&&value<=159){return'Low';}else if(value>=59&&value<=0){return'Very Low';}else{return'Level not known';}};_this.determinGran=function(){var newGrand=2;if(_this.state.setPeriod<=8){newGrand=2;}else if(_this.state.setPeriod>8&&_this.state.setPeriod<=12){newGrand=2;}else if(_this.state.setPeriod>12&&_this.state.setPeriod<=24){newGrand=2;}else if(_this.state.setPeriod>24&&_this.state.setPeriod<=48){newGrand=2;}else if(_this.state.setPeriod>48&&_this.state.setPeriod<=96){newGrand=4;}else if(_this.state.setPeriod>200){newGrand=6;}_this.setState({setGran:newGrand});return newGrand;};_this.aggForecast=function(inputArray,granularity,timeline){// const period = 8\n// const periodUnits = 'h'\n// const granularity = 4\n// const forecastArray =[2,3,6,1,5,1,1,1,1,1,1,10]\nvar forecastArray=[];if(timeline){forecastArray=_toConsumableArray(inputArray);}else{forecastArray=inputArray.slice(0,_this.state.setPeriod);}var agged=[];for(var index=0;index<forecastArray.length;index+=granularity){if(index%granularity===0){var half=forecastArray[index];var set=forecastArray.slice(index,index+granularity).map(function(item){return item.intensity.forecast;});//console.log(set)\nvar sum=set.reduce(function(acc,cur){return acc+cur;});//console.log(sum)\nvar avg=sum/set.length;agged=[].concat(_toConsumableArray(agged),[{from:half.from,level:Math.round(avg),text:_this.calTextLevel(avg)}]);}}//let newAgged = agged.slice(0, this.state.setPeriod)\nif(timeline){_this.setState({timelineVals:agged});}else{var best=_this.bestPeriods(agged);_this.setState({aggedVals:agged,bestPeriods:best});}//console.log(agged)\n//return agged\n};_this.bestPeriods=function(objArray){var day=objArray.map(function(item){if(parseInt(item.from.split('T')[1])>=6&&parseInt(item.from.split('T')[1])<=23){return item;}});var night=objArray.map(function(item){if(parseInt(item.from.split('T')[1])<6||parseInt(item.from.split('T')[1])===24){return item;}});var bestDay=day.sort(function(a,b){return a.level>b.level?1:-1;}).slice(0,3);var bestNight=night.sort(function(a,b){return a.level>b.level?1:-1;}).slice(0,3);return{day:bestDay,night:bestNight};};_this.updateRegion=function(newRegion){_this.setState({setRegion:newRegion});};_this.updatePostCode=function(newPostCode){_this.setState({setPostCode:newPostCode});};_this.updatePeriod=function(newPeriod){_this.setState({setPeriod:newPeriod});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.viewport();this.get48hForecast(this.now(),true);this.compileRegionIndex();{setInterval(function(){_this2.countEmmissions();},500);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(this.state.setRegion!==prevState.setRegion){this.get48hForecast(this.now(),true);this.compileRegionIndex();}else if(this.state.setPostCode!==prevState.setPostCode){this.get48hForecast(this.now(),false);}else if(this.state.forecastA!==prevState.forecastA){return this.getForecastB(this.state.setRegion);}else if(this.state.forecastB!==prevState.forecastB){return this.getForecastC(this.state.setRegion);}else if(this.state.forecastC!==prevState.forecastC){return this.aggForecast(this.allForecast(),this.determinGran(),false),this.aggForecast(this.allForecast(),2,true);}else if(this.state.setPeriod!==prevState.setPeriod){return this.aggForecast(this.allForecast(),this.determinGran());}else if(this.state.timelineVals!==prevState.timelineVals){return this.calMediumLevel(),this.calMiddle();}}},{key:\"render\",value:function render(){return React.createElement(Router,null,React.createElement(\"div\",null,React.createElement(Nav,null),React.createElement(Container,null,React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/\"},React.createElement(Start,{intensityData:this.state.currentLevel})),React.createElement(Route,{path:\"/start\"},React.createElement(Start,{intensityData:this.state.currentLevel,emissions:this.state.emissions.toFixed(4)})),React.createElement(Route,{path:\"/forecast-summary\"},React.createElement(Forecast,{regionIndex:this.state.regionIndex,setRegion:this.state.setRegion,updatePostCode:this.updatePostCode,setPeriod:this.state.setPeriod,updateRegion:this.updateRegion,updatePeriod:this.updatePeriod,aggedVals:this.state.aggedVals,mobileUser:this.state.mobileUser,bestPeriods:this.state.bestPeriods})),React.createElement(Route,{path:\"/forecast-timeline\"},React.createElement(Timeline,{timelineVals:this.state.timelineVals,screenWidth:this.state.screenWidth,middleLevel:this.state.middle,mobileUser:this.state.mobileUser})),React.createElement(Route,{path:\"/advice\"},React.createElement(Advice,null)),React.createElement(Route,{path:\"/about\"},React.createElement(About,null))))));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","API","Nav","Start","Forecast","Timeline","About","Advice","ItemMeta","cloneWithoutLoc","Container","App","state","mobileUser","screenWidth","setRegion","setPostCode","useId","setPeriod","setGran","mediumVal","middle","emissions","regionIndex","currentLevel","region","text","value","forecastA","forecastB","forecastC","aggedVals","bestPeriods","timelineVals","now","date","Date","toISOString","viewport","e","window","a","document","documentElement","body","dimentions","width","height","setState","calMediumLevel","set","map","item","level","sum","reduce","acc","cur","avg","length","Math","round","calMiddle","big","plus30Mins","dateTime","newTime","split","output","UTC","setMinutes","getMinutes","newdateTime","countEmmissions","count","get48hForecast","start","useID","getRegionId48HrsData","then","info","data","getRegionPostCode48HrsData","getForecastB","to","startPlus30","console","log","getForecastC","compileRegionIndex","getCurrentRegionalData","regions","id","regionid","name","shortname","intensity","index","forecast","datainfo","allForecast","calTextLevel","determinGran","newGrand","aggForecast","inputArray","granularity","timeline","forecastArray","slice","agged","half","from","best","objArray","day","parseInt","night","bestDay","sort","b","bestNight","updateRegion","newRegion","updatePostCode","newPostCode","updatePeriod","newPeriod","setInterval","prevProps","prevState","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport API from './adapters/API'\nimport Nav from './components/Nav';\nimport Start from './components/Start';\nimport Forecast from './components/Forecast';\nimport Timeline from './components/Timeline';\nimport About from './components/About';\nimport Advice from './components/Advice';\nimport { ItemMeta } from 'semantic-ui-react';\nimport { cloneWithoutLoc } from '@babel/types';\n\nimport { Container } from 'semantic-ui-react'\n\n\nexport class App extends Component {\n  \n  \n  state = {\n    mobileUser: false,\n    screenWidth:  400,\n    setRegion: 18,\n    setPostCode: '',\n    useId: true,\n    setPeriod: 12,\n    setGran: 2,\n    mediumVal: 150,\n    middle: 150,\n    emissions: 0,\n    regionIndex: [],\n    currentLevel: {region: '', text: '', value: 0},\n    forecastA: {},\n    forecastB: {},\n    forecastC: {},\n    aggedVals: [],\n    bestPeriods: {},\n    timelineVals: []\n  }\n  \n  \n//2017-08-25T12:35Z\n//[{id: 0, name: 'test'}]\n\nnow = () => {\n  let date = new Date();\n  return date.toISOString()\n}\n\nviewport = () => {\nlet e = window\nlet a = 'inner';\nif ( !( 'innerWidth' in window ) )\n{\na = 'client';\ne = document.documentElement || document.body;\n}\nlet dimentions = { width : e[ a+'Width' ] , height : e[ a+'Height' ] }\n\nthis.setState({\n  screenWidth: dimentions.width\n})\nif (dimentions.width < 600) {\n  this.setState({mobileUser: true,\n  })\n}\n}\n\ncalMediumLevel = () => {\n\n  let set = this.state.timelineVals.map(item => item.level)\n  let sum = set.reduce((acc, cur) => acc + cur)\n  //console.log(sum)\n  let avg = sum / set.length\n  \n  this.setState({\n  mediumVal: Math.round(avg)\n  })\n}\n\ncalMiddle = () => {\n  let set = this.state.timelineVals.map(item => item.level)\n  let big = set.reduce((acc, cur) => {\n    if (cur > acc){  \n    acc = cur}\n  })\n  //console.log(sum)\n  let avg = big / 2\n  this.setState({\n  middle: Math.round(avg)\n  })\n}\n\n\nplus30Mins = (dateTime) => {\n  let newTime = dateTime.split(/\\D+/);\n  let output =  new Date(Date.UTC(newTime[0], newTime[1]-1, newTime[2], newTime[3], newTime[4], newTime[5]));\n  output.setMinutes(output.getMinutes() + 30)\n  let newdateTime = output.toISOString()\n  return newdateTime\n}\n\n\n  componentDidMount () {\n    this.viewport()\n    this.get48hForecast(this.now(),true)\n    this.compileRegionIndex()\n    {setInterval(() => {this.countEmmissions()},500)}\n    \n  }\n\n\n  \n\n  componentDidUpdate (prevProps, prevState) {\n    if (this.state.setRegion !== prevState.setRegion){\n      this.get48hForecast(this.now(),true)\n      this.compileRegionIndex()\n    }\n    else if (this.state.setPostCode !== prevState.setPostCode){\n      this.get48hForecast(this.now(),false)\n    }\n    else if (this.state.forecastA !== prevState.forecastA)\n    {\n      return this.getForecastB(this.state.setRegion)\n    }\n    else if (this.state.forecastB !== prevState.forecastB)\n    {\n      return this.getForecastC(this.state.setRegion)\n    }\n    else if (this.state.forecastC !== prevState.forecastC)\n    {\n      return (\n        this.aggForecast(this.allForecast(), this.determinGran(), false),\n        this.aggForecast(this.allForecast(), 2, true)\n        )\n    }\n    else if (this.state.setPeriod !== prevState.setPeriod)\n    {\n      return (\n      this.aggForecast(this.allForecast(), this.determinGran()))\n    }\n    else if (this.state.timelineVals !== prevState.timelineVals) {\n      return (\n        this.calMediumLevel(),\n        this.calMiddle()\n      )\n    }\n  }\n\n  countEmmissions = () => {\n    let count = this.state.emissions += 0.0142\n    this.setState({emissions: count})\n  }\n  \nget48hForecast = (start, useID) => {\n  if (this.state.useId && useID){\n    API.getRegionId48HrsData(this.state.setRegion, start).then(info => this.setState({forecastA: info.data.data}))\n  }else {\n // API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({forecastA: info.data.data}, {setRegion: info.data.regionid}))\n    API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({forecastA: info.data.data}))\n  }\n}\ngetForecastB = () => {\n  const start = this.state.forecastA[this.state.forecastA.length - 1].to\n  const startPlus30 = this.plus30Mins(start)\n  console.log(startPlus30)\n  if (this.state.useId) {\n    API.getRegionId48HrsData(this.state.setRegion, startPlus30).then(info => this.setState({forecastB: info.data.data}))\n}else{\n    API.getRegionPostCode48HrsData(this.state.setPostCode, startPlus30).then(info => this.setState({forecastB: info.data.data}))\n  } \n}\ngetForecastC = () => {\n  const start = this.state.forecastB[this.state.forecastB.length - 1].to\n  const startPlus30 = this.plus30Mins(start)\n  if (this.state.useId) {\n    API.getRegionId48HrsData(this.state.setRegion, startPlus30).then(info => this.setState({forecastC: info.data.data}))\n}else{\n    API.getRegionPostCode48HrsData(this.state.setPostCode, startPlus30).then(info => this.setState({forecastC: info.data.data}))\n  } \n}\n\n\n\n  compileRegionIndex = () => {\n  \n    this.setState({regionIndex: []})\n    API.getCurrentRegionalData().then(info => info.data[0].regions.map(item => {\n          this.setState({\n              regionIndex: \n                [...this.state.regionIndex,\n                {id: item.regionid,\n                name: item.shortname}],\n                }\n          )\n          if (item.regionid === this.state.setRegion){\n            this.setState({\n              currentLevel: {region: item.regionid, text: item.intensity.index, value: item.intensity.forecast}\n            })\n          }\n       }\n      )\n    ).then(datainfo => console.log(datainfo))\n}\n  \n\nallForecast = () => {\n  const allForecast = [...this.state.forecastA, ...this.state.forecastB, ...this.state.forecastC]\n  return allForecast\n}\n\ncalTextLevel = (value) => {\n  if (value > 360) {\n      return 'Very High'\n  } \n  else if (value >= 260 && value <= 359 ) {\n      return 'High'\n  }\n  else if (value >= 160 && value <= 259 ) {\n      return 'Moderate'\n  } \n  else if (value >= 60 && value <= 159 ) {\n    return 'Low'\n  }\n  else if (value >= 59 && value <= 0 ) {\n    return 'Very Low'\n  }else \n  {\n    return 'Level not known'\n  }\n}\n\ndeterminGran = () => {\n let newGrand = 2\n  if (this.state.setPeriod <= 8) {\n    newGrand = 2\n  }else if (this.state.setPeriod > 8 && this.state.setPeriod <= 12) {\n    newGrand = 2\n  }else if (this.state.setPeriod > 12 && this.state.setPeriod <= 24) {\n    newGrand = 2\n  }else if (this.state.setPeriod > 24 && this.state.setPeriod <= 48) {\n    newGrand = 2\n  }else if (this.state.setPeriod > 48 && this.state.setPeriod <= 96) {\n    newGrand = 4\n  }else if (this.state.setPeriod > 200) {\n    newGrand = 6\n  }\n  this.setState({setGran: newGrand})\n  return newGrand\n}\n\naggForecast = (inputArray, granularity, timeline) => {\n \n  // const period = 8\n  // const periodUnits = 'h'\n  // const granularity = 4\n  // const forecastArray =[2,3,6,1,5,1,1,1,1,1,1,10]\n\n  let forecastArray = []\n\n  if (timeline) {\n  forecastArray = [...inputArray]\n  }else{\n  forecastArray = inputArray.slice(0, this.state.setPeriod)\n  }\n\n\nlet agged = []\n\nfor (let index = 0; index < forecastArray.length; index+=granularity) {\n \n  if (index%granularity === 0) {\n  const half = forecastArray[index];\n  let set = forecastArray.slice(index, index+granularity).map(item => item.intensity.forecast)\n      //console.log(set)\n  let sum = set.reduce((acc, cur) => acc + cur)\n      //console.log(sum)\n      let avg = sum / set.length\n  agged = [...agged, {from:half.from, level:Math.round(avg), text:this.calTextLevel(avg)}]\n}\n}\n\n//let newAgged = agged.slice(0, this.state.setPeriod)\n\n\nif (timeline){\n  this.setState({\n    timelineVals: agged,\n  })\n}else {\n  \nlet best = this.bestPeriods(agged)\n\nthis.setState({\n  aggedVals: agged,\n  bestPeriods: best\n})\n}\n//console.log(agged)\n//return agged\n}\n\n\n\n\nbestPeriods = (objArray) => {\n\nlet day = objArray.map(item => {\n  if (parseInt(item.from.split('T')[1]) >= 6 && parseInt(item.from.split('T')[1]) <= 23){\n    return item\n  } \n})\n\nlet night = objArray.map(item => {\n  if (parseInt(item.from.split('T')[1]) < 6 || parseInt(item.from.split('T')[1]) === 24){\n    return item\n  } \n})\n\nlet bestDay = day.sort((a, b) => (a.level > b.level) ? 1 : -1).slice(0,3)\nlet bestNight = night.sort((a, b) => (a.level > b.level) ? 1 : -1).slice(0,3)\n\nreturn {day:bestDay, night:bestNight}\n\n}\n\nupdateRegion = (newRegion) => {\nthis.setState({setRegion: newRegion})\n}\n\nupdatePostCode = (newPostCode => {\n  this.setState({setPostCode: newPostCode})\n})\nupdatePeriod = (newPeriod) => {\nthis.setState({setPeriod: newPeriod})\n}\n\n\n\n  render() {\n    return (\n\n\n<Router>\n\n\n<div>\n     \n<Nav/>\n\n<Container>\n\n<Switch>\n\n    <Route exact path=\"/\">\n          <Start intensityData={this.state.currentLevel}/>\n    </Route>\n    <Route path=\"/start\" >\n          <Start intensityData={this.state.currentLevel} emissions={this.state.emissions.toFixed(4)}/>\n    </Route>\n    <Route path=\"/forecast-summary\">\n          <Forecast regionIndex={this.state.regionIndex} setRegion={this.state.setRegion} updatePostCode={this.updatePostCode} setPeriod={this.state.setPeriod}\n                    updateRegion={this.updateRegion} updatePeriod={this.updatePeriod} aggedVals={this.state.aggedVals}\n                    mobileUser={this.state.mobileUser} bestPeriods={this.state.bestPeriods}\n          />\n    </Route>\n    <Route path=\"/forecast-timeline\">\n          <Timeline timelineVals={this.state.timelineVals} screenWidth={this.state.screenWidth} middleLevel={this.state.middle} mobileUser={this.state.mobileUser}/>\n    </Route>\n    <Route path=\"/advice\">\n          <Advice />\n    </Route>\n    <Route path=\"/about\">\n          <About />\n    </Route>\n\n</Switch>\n      \n</Container>\n</div>\n\n</Router>\n\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}