{"ast":null,"code":"const apiEndpoint = \"https://api.carbonintensity.org.uk/\";\nconst nationalURL = \"\".concat(apiEndpoint, \"intensity/\");\nconst allRegionsURL = \"\".concat(apiEndpoint, \"regional/\");\nconst region48Hrs = \"\".concat(allRegionsURL, \"intensity/\");\nconst id48Hrs = \"\".concat(allRegionsURL, \"intensity/{from}/fw48h/regionid/\");\n\nconst getCurrentNationalData = () => fetch(nationalURL, {\n  method: \"GET\"\n}).then(response => response.json());\n\nconst getCurrentRegionalData = () => fetch(allRegionsURL, {\n  method: \"GET\"\n}).then(response => response.json());\n\nconst getRegionId48HrsData = () => fetch(allRegionsURL, {\n  method: \"GET\"\n}).then(response => response.json());\n\nexport default {\n  getCurrentNationalData,\n  getCurrentRegionalData\n};","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/adapters/API.js"],"names":["apiEndpoint","nationalURL","allRegionsURL","region48Hrs","id48Hrs","getCurrentNationalData","fetch","method","then","response","json","getCurrentRegionalData","getRegionId48HrsData"],"mappings":"AAAA,MAAMA,WAAW,wCAAjB;AACA,MAAMC,WAAW,aAAMD,WAAN,eAAjB;AACA,MAAME,aAAa,aAAMF,WAAN,cAAnB;AACA,MAAMG,WAAW,aAAMD,aAAN,eAAjB;AACA,MAAME,OAAO,aAAMF,aAAN,qCAAb;;AAIA,MAAMG,sBAAsB,GAAG,MAAMC,KAAK,CAACL,WAAD,EAAa;AAACM,EAAAA,MAAM,EAAE;AAAT,CAAb,CAAL,CAAmCC,IAAnC,CAAwCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAApD,CAArC;;AACA,MAAMC,sBAAsB,GAAG,MAAML,KAAK,CAACJ,aAAD,EAAe;AAACK,EAAAA,MAAM,EAAE;AAAT,CAAf,CAAL,CAAqCC,IAArC,CAA0CC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAtD,CAArC;;AACA,MAAME,oBAAoB,GAAG,MAAMN,KAAK,CAACJ,aAAD,EAAe;AAACK,EAAAA,MAAM,EAAE;AAAT,CAAf,CAAL,CAAqCC,IAArC,CAA0CC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAtD,CAAnC;;AAMA,eAAe;AACXL,EAAAA,sBADW;AAEXM,EAAAA;AAFW,CAAf","sourcesContent":["const apiEndpoint = `https://api.carbonintensity.org.uk/`\nconst nationalURL = `${apiEndpoint}intensity/`\nconst allRegionsURL = `${apiEndpoint}regional/`\nconst region48Hrs = `${allRegionsURL}intensity/`\nconst id48Hrs = `${allRegionsURL}intensity/{from}/fw48h/regionid/`\n\n\n\nconst getCurrentNationalData = () => fetch(nationalURL,{method: \"GET\"}).then(response => response.json())\nconst getCurrentRegionalData = () => fetch(allRegionsURL,{method: \"GET\"}).then(response => response.json())\nconst getRegionId48HrsData = () => fetch(allRegionsURL,{method: \"GET\"}).then(response => response.json())\n\n\n\n\n\nexport default {\n    getCurrentNationalData,\n    getCurrentRegionalData\n}"]},"metadata":{},"sourceType":"module"}