{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Forecast.js\";\nimport React, { Component } from 'react';\nimport { Dropdown, Table, Grid, Image, Segment } from 'semantic-ui-react';\nexport class Forecast extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      period: 48,\n      region: 18,\n      value: {\n        key: 'Jenny Hess',\n        text: 'Jenny Hess',\n        value: 1,\n        image: {\n          avatar: true,\n          src: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg'\n        }\n      }\n    };\n    this.periodOptions = [{\n      key: 'Jenny Hess',\n      text: 'Jenny Hess',\n      value: 1,\n      image: {\n        avatar: true,\n        src: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg'\n      }\n    }, {\n      key: 'Elliot Fu',\n      text: 'Elliot Fu',\n      value: 2,\n      image: {\n        avatar: true,\n        src: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg'\n      }\n    }, {\n      key: 'Stevie Feliciano',\n      text: 'Stevie Feliciano',\n      value: 3,\n      image: {\n        avatar: true,\n        src: 'https://react.semantic-ui.com/images/avatar/small/stevie.jpg'\n      }\n    }];\n\n    this.setPeriod = event => {\n      console.log(event.target.value);\n      this.setState({\n        period: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" \", React.createElement(Dropdown, {\n      placeholder: \"Region\",\n      selection: true,\n      options: this.periodOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Yep thats right I'm some text!\"))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" \", React.createElement(Dropdown, {\n      placeholder: \"Region\",\n      selection: true,\n      options: this.periodOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Yep thats right I'm some text!\")))));\n  }\n\n}\nexport default Forecast;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Forecast.js"],"names":["React","Component","Dropdown","Table","Grid","Image","Segment","Forecast","state","period","region","value","key","text","image","avatar","src","periodOptions","setPeriod","event","console","log","target","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, Table, Grid, Image, Segment } from 'semantic-ui-react';\n\nexport class Forecast extends Component {\n\n\nstate = {\n    period: 48,\n    region: 18,\n    value:  {\n        key: 'Jenny Hess',\n        text: 'Jenny Hess',\n        value: 1,\n        image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg' },\n      }\n}\n\n\n\n\n        periodOptions = [\n            {\n              key: 'Jenny Hess',\n              text: 'Jenny Hess',\n              value: 1,\n              image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg' },\n            },\n            {\n              key: 'Elliot Fu',\n              text: 'Elliot Fu',\n              value: 2,\n              image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg' },\n            },\n            {\n              key: 'Stevie Feliciano',\n              text: 'Stevie Feliciano',\n              value: 3,\n              image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/stevie.jpg' },\n            },\n          ]\n\n\n\n\n        setPeriod = (event) => {\n            console.log(event.target.value)\n            this.setState({\n                period: event.target.value\n            })\n        }\n\n\n    render() {\n        return (\n            <div>\n                {/* <h1> Hi, it's me forecast! Hows things?</h1> */}\n\n<Grid columns='2' >\n<Grid.Row>\n   \n   <Grid.Column floated='left'>      \n    <p> <Dropdown\n         placeholder='Region'\n         selection\n         options={this.periodOptions}\n         \n       />\n       </p>\n       </Grid.Column>\n       <Grid.Column floated='left'>\n   <p>Yep thats right I'm some text!</p>\n   </Grid.Column>\n\n</Grid.Row>\n\n\n<Grid.Row>\n   \n    <Grid.Column floated='left'>      \n     <p> <Dropdown\n          placeholder='Region'\n          selection\n          options={this.periodOptions}\n        />\n        </p>\n        </Grid.Column>\n        <Grid.Column floated='left'>\n    <p>Yep thats right I'm some text!</p>\n    </Grid.Column>\n \n </Grid.Row>\n </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}