{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport API from './adapters/API';\nimport Nav from './components/Nav';\nimport Start from './components/Start';\nimport Forecast from './components/Forecast';\nimport Timeline from './components/Timeline';\nimport Hero from './components/Hero';\nimport About from './components/About';\nimport Advice from './components/Advice';\nimport FuelMix from './components/FuelMix';\nimport ScrollToTop from './components/ScrollToTop';\nimport { ItemMeta, Header } from 'semantic-ui-react';\nimport { cloneWithoutLoc } from '@babel/types';\nimport { Container } from 'semantic-ui-react';\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mobileUser: false,\n      screenWidth: 400,\n      setRegion: 18,\n      setPostCode: '',\n      useId: true,\n      setPeriod: 12,\n      setGran: 2,\n      mediumVal: 150,\n      middle: 150,\n      emissions: 0,\n      regionIndex: [],\n      currentLevel: {\n        region: '',\n        text: '',\n        value: 0\n      },\n      forecastA: {},\n      forecastB: {},\n      forecastC: {},\n      aggedVals: [],\n      bestPeriods: {},\n      fuelMix: [],\n      timelineVals: [],\n      loading: true\n    };\n\n    this.now = () => {\n      let date = new Date();\n      return date.toISOString();\n    };\n\n    this.viewport = () => {\n      let e = window;\n      let a = 'inner';\n\n      if (!('innerWidth' in window)) {\n        a = 'client';\n        e = document.documentElement || document.body;\n      }\n\n      let dimentions = {\n        width: e[a + 'Width'],\n        height: e[a + 'Height']\n      };\n      this.setState({\n        screenWidth: dimentions.width\n      });\n\n      if (dimentions.width < 600) {\n        this.setState({\n          mobileUser: true\n        });\n      }\n    };\n\n    this.calMediumLevel = () => {\n      let set = this.state.timelineVals.map(item => item.level);\n      let sum = set.reduce((acc, cur) => acc + cur); //console.log(sum)\n\n      let avg = sum / set.length;\n      this.setState({\n        mediumVal: Math.round(avg)\n      });\n    };\n\n    this.calMiddle = () => {\n      let set = this.state.timelineVals.map(item => item.level);\n      let big = set.reduce((acc, cur) => {\n        if (cur > acc) {\n          acc = cur;\n        }\n      }); //console.log(sum)\n\n      let avg = big / 2;\n      this.setState({\n        middle: Math.round(avg)\n      });\n    };\n\n    this.plus30Mins = dateTime => {\n      let newTime = dateTime.split(/\\D+/);\n      let output = new Date(Date.UTC(newTime[0], newTime[1] - 1, newTime[2], newTime[3], newTime[4], newTime[5]));\n      output.setMinutes(output.getMinutes() + 30);\n      let newdateTime = output.toISOString();\n      return newdateTime;\n    };\n\n    this.loading = () => {\n      if (typeof this.state.forecastC[0] === 'undefined') {\n        console.log('loading check');\n        this.setState({\n          loading: true\n        });\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.countEmmissions = () => {\n      let count = this.state.emissions += 0.0142;\n      this.setState({\n        emissions: count\n      });\n    };\n\n    this.get48hForecast = (start, useID) => {\n      if (this.state.useId && useID) {\n        this.setState({\n          loading: true\n        });\n        API.getRegionId48HrsData(this.state.setRegion, start).then(info => this.setState({\n          forecastA: info.data.data\n        }));\n      } else {\n        // API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({forecastA: info.data.data}, {setRegion: info.data.regionid}))\n        this.setState({\n          loading: true\n        });\n        API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({\n          forecastA: info.data.data\n        }));\n      }\n    };\n\n    this.getForecastB = () => {\n      const start = this.state.forecastA[this.state.forecastA.length - 1].to;\n      const startPlus30 = this.plus30Mins(start);\n      console.log(startPlus30);\n\n      if (this.state.useId) {\n        API.getRegionId48HrsData(this.state.setRegion, startPlus30).then(info => this.setState({\n          forecastB: info.data.data\n        }));\n      } else {\n        API.getRegionPostCode48HrsData(this.state.setPostCode, startPlus30).then(info => this.setState({\n          forecastB: info.data.data\n        }));\n      }\n    };\n\n    this.getForecastC = () => {\n      const start = this.state.forecastB[this.state.forecastB.length - 1].to;\n      const startPlus30 = this.plus30Mins(start);\n\n      if (this.state.useId) {\n        API.getRegionId48HrsData(this.state.setRegion, startPlus30).then(info => this.setState({\n          forecastC: info.data.data,\n          loding: false\n        }));\n      } else {\n        API.getRegionPostCode48HrsData(this.state.setPostCode, startPlus30).then(info => this.setState({\n          forecastC: info.data.data,\n          loading: false\n        }));\n      }\n    };\n\n    this.compileRegionIndex = () => {\n      this.setState({\n        regionIndex: []\n      });\n      API.getCurrentRegionalData().then(info => info.data[0].regions.map(item => {\n        this.setState({\n          regionIndex: [...this.state.regionIndex, {\n            id: item.regionid,\n            name: item.shortname\n          }]\n        });\n\n        if (item.regionid === this.state.setRegion) {\n          this.setState({\n            currentLevel: {\n              region: item.regionid,\n              text: item.intensity.index,\n              value: item.intensity.forecast\n            }\n          });\n        }\n      })).then(datainfo => console.log(datainfo));\n    };\n\n    this.allForecast = () => {\n      const allForecast = [...this.state.forecastA, ...this.state.forecastB, ...this.state.forecastC];\n      return allForecast;\n    };\n\n    this.calTextLevel = value => {\n      if (value > 360) {\n        return 'Very High';\n      } else if (value >= 260 && value <= 359) {\n        return 'High';\n      } else if (value >= 160 && value <= 259) {\n        return 'Moderate';\n      } else if (value >= 60 && value <= 159) {\n        return 'Low';\n      } else if (value <= 59 && value >= 0) {\n        return 'Very Low';\n      } else {\n        return 'Level not known';\n      }\n    };\n\n    this.determinGran = () => {\n      let newGrand = 2;\n\n      if (this.state.setPeriod <= 8) {\n        newGrand = 2;\n      } else if (this.state.setPeriod > 8 && this.state.setPeriod <= 12) {\n        newGrand = 2;\n      } else if (this.state.setPeriod > 12 && this.state.setPeriod <= 24) {\n        newGrand = 2;\n      } else if (this.state.setPeriod > 24 && this.state.setPeriod <= 48) {\n        newGrand = 2;\n      } else if (this.state.setPeriod > 48 && this.state.setPeriod <= 96) {\n        newGrand = 4;\n      } else if (this.state.setPeriod > 200) {\n        newGrand = 6;\n      }\n\n      this.setState({\n        setGran: newGrand\n      });\n      return newGrand;\n    };\n\n    this.formatFuelMix = array => {\n      return array.map(obj => {\n        return {\n          label: obj.perc > 1 && obj.fuel !== 'biomass' ? obj.fuel : '',\n          angle: obj.perc,\n          className: '',\n          subLabel: obj.fuel === 'biomass' ? 'biomass' : ''\n        };\n      });\n    };\n\n    this.aggForecast = (inputArray, granularity, timeline) => {\n      // const period = 8\n      // const periodUnits = 'h'\n      // const granularity = 4\n      // const forecastArray =[2,3,6,1,5,1,1,1,1,1,1,10]\n      let forecastArray = [];\n      let forecastArrayFuelMix = [];\n\n      if (timeline) {\n        forecastArray = [...inputArray];\n      } else {\n        forecastArray = inputArray.slice(0, this.state.setPeriod);\n        forecastArrayFuelMix = [...inputArray];\n      }\n\n      let agged = [];\n\n      for (let index = 0; index < forecastArray.length; index += granularity) {\n        if (index % granularity === 0) {\n          const half = forecastArray[index];\n          let set = forecastArray.slice(index, index + granularity).map(item => item.intensity.forecast); //console.log(set)\n\n          let sum = set.reduce((acc, cur) => acc + cur); //console.log(sum)\n\n          let avg = sum / set.length;\n          agged = [...agged, {\n            from: half.from,\n            level: Math.round(avg),\n            text: this.calTextLevel(avg)\n          }];\n        }\n      }\n\n      let fuelMix = [];\n\n      for (let index = 0; index < forecastArrayFuelMix.length; index += 2) {\n        if (index % 2 === 0) {\n          const half = forecastArrayFuelMix[index];\n          let set = forecastArrayFuelMix.slice(index, index + 2).map(item => item.intensity.forecast); //console.log(set)\n\n          let sum = set.reduce((acc, cur) => acc + cur); //console.log(sum)\n\n          let avg = sum / set.length;\n          fuelMix = [...fuelMix, {\n            date: half.from,\n            level: Math.round(avg),\n            text: this.calTextLevel(avg),\n            chartData: this.formatFuelMix(half.generationmix)\n          }];\n        }\n      } //let newAgged = agged.slice(0, this.state.setPeriod)\n\n\n      if (timeline) {\n        this.setState({\n          timelineVals: agged\n        });\n      } else {\n        let best = this.bestPeriods(agged);\n        this.setState({\n          aggedVals: agged,\n          bestPeriods: best,\n          fuelMix: fuelMix\n        });\n      } //console.log(agged)\n      //return agged\n\n    };\n\n    this.bestPeriods = objArray => {\n      let day = objArray.map(item => {\n        if (parseInt(item.from.split('T')[1]) >= 6 && parseInt(item.from.split('T')[1]) <= 23) {\n          return item;\n        }\n      });\n      let night = objArray.map(item => {\n        if (parseInt(item.from.split('T')[1]) < 6 || parseInt(item.from.split('T')[1]) === 24) {\n          return item;\n        }\n      });\n      let bestDay = day.sort((a, b) => a.level > b.level ? 1 : -1).slice(0, 3);\n      let bestNight = night.sort((a, b) => a.level > b.level ? 1 : -1).slice(0, 3);\n      return {\n        day: bestDay,\n        night: bestNight\n      };\n    };\n\n    this.updateRegion = newRegion => {\n      this.setState({\n        setRegion: newRegion\n      });\n    };\n\n    this.updatePostCode = newPostCode => {\n      this.setState({\n        setPostCode: newPostCode\n      });\n    };\n\n    this.updatePeriod = newPeriod => {\n      this.setState({\n        setPeriod: newPeriod\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loading();\n    this.viewport();\n    this.get48hForecast(this.now(), true);\n    this.compileRegionIndex();\n    {\n      setInterval(() => {\n        this.countEmmissions();\n      }, 500);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.setRegion !== prevState.setRegion) {\n      this.get48hForecast(this.now(), true);\n      this.compileRegionIndex();\n    } else if (this.state.setPostCode !== prevState.setPostCode) {\n      this.get48hForecast(this.now(), false);\n    } else if (this.state.forecastA !== prevState.forecastA) {\n      return this.getForecastB(this.state.setRegion);\n    } else if (this.state.forecastB !== prevState.forecastB) {\n      return this.getForecastC(this.state.setRegion);\n    } else if (this.state.forecastC !== prevState.forecastC) {\n      return this.aggForecast(this.allForecast(), this.determinGran(), false), this.aggForecast(this.allForecast(), 2, true), this.loading();\n    } else if (this.state.setPeriod !== prevState.setPeriod) {\n      return this.aggForecast(this.allForecast(), this.determinGran());\n    } else if (this.state.timelineVals !== prevState.timelineVals) {\n      return this.calMediumLevel(), this.calMiddle();\n    }\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(ScrollToTop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(Hero, {\n      mobileUser: this.state.mobileUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"parentContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(Start, {\n      intensityData: this.state.currentLevel,\n      emissions: this.state.emissions.toFixed(4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(Start, {\n      intensityData: this.state.currentLevel,\n      emissions: this.state.emissions.toFixed(4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/forecast-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(Forecast, {\n      regionIndex: this.state.regionIndex,\n      setRegion: this.state.setRegion,\n      updatePostCode: this.updatePostCode,\n      setPeriod: this.state.setPeriod,\n      updateRegion: this.updateRegion,\n      updatePeriod: this.updatePeriod,\n      aggedVals: this.state.aggedVals,\n      mobileUser: this.state.mobileUser,\n      bestPeriods: this.state.bestPeriods,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/forecast-timeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(Timeline, {\n      loading: this.state.loading,\n      timelineVals: this.state.timelineVals,\n      screenWidth: this.state.screenWidth,\n      middleLevel: this.state.middle,\n      mobileUser: this.state.mobileUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/forecast-fuelmix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(FuelMix, {\n      data: this.state.fuelMix,\n      mobileUser: this.state.mobileUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/advice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, React.createElement(Advice, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(About, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }))))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","API","Nav","Start","Forecast","Timeline","Hero","About","Advice","FuelMix","ScrollToTop","ItemMeta","Header","cloneWithoutLoc","Container","App","state","mobileUser","screenWidth","setRegion","setPostCode","useId","setPeriod","setGran","mediumVal","middle","emissions","regionIndex","currentLevel","region","text","value","forecastA","forecastB","forecastC","aggedVals","bestPeriods","fuelMix","timelineVals","loading","now","date","Date","toISOString","viewport","e","window","a","document","documentElement","body","dimentions","width","height","setState","calMediumLevel","set","map","item","level","sum","reduce","acc","cur","avg","length","Math","round","calMiddle","big","plus30Mins","dateTime","newTime","split","output","UTC","setMinutes","getMinutes","newdateTime","console","log","countEmmissions","count","get48hForecast","start","useID","getRegionId48HrsData","then","info","data","getRegionPostCode48HrsData","getForecastB","to","startPlus30","getForecastC","loding","compileRegionIndex","getCurrentRegionalData","regions","id","regionid","name","shortname","intensity","index","forecast","datainfo","allForecast","calTextLevel","determinGran","newGrand","formatFuelMix","array","obj","label","perc","fuel","angle","className","subLabel","aggForecast","inputArray","granularity","timeline","forecastArray","forecastArrayFuelMix","slice","agged","half","from","chartData","generationmix","best","objArray","day","parseInt","night","bestDay","sort","b","bestNight","updateRegion","newRegion","updatePostCode","newPostCode","updatePeriod","newPeriod","componentDidMount","setInterval","componentDidUpdate","prevProps","prevState","render","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport API from './adapters/API'\nimport Nav from './components/Nav';\nimport Start from './components/Start';\nimport Forecast from './components/Forecast';\nimport Timeline from './components/Timeline';\nimport Hero from './components/Hero';\nimport About from './components/About';\nimport Advice from './components/Advice';\nimport FuelMix from './components/FuelMix';\nimport ScrollToTop from './components/ScrollToTop';\nimport { ItemMeta, Header } from 'semantic-ui-react';\nimport { cloneWithoutLoc } from '@babel/types';\n\nimport { Container } from 'semantic-ui-react'\n\n\nexport class App extends Component {\n  \n  \n  state = {\n    mobileUser: false,\n    screenWidth:  400,\n    setRegion: 18,\n    setPostCode: '',\n    useId: true,\n    setPeriod: 12,\n    setGran: 2,\n    mediumVal: 150,\n    middle: 150,\n    emissions: 0,\n    regionIndex: [],\n    currentLevel: {region: '', text: '', value: 0},\n    forecastA: {},\n    forecastB: {},\n    forecastC: {},\n    aggedVals: [],\n    bestPeriods: {},\n    fuelMix: [],\n    timelineVals: [],\n    loading:true\n  }\n  \n  \n//2017-08-25T12:35Z\n//[{id: 0, name: 'test'}]\n\nnow = () => {\n  let date = new Date();\n  return date.toISOString()\n}\n\nviewport = () => {\nlet e = window\nlet a = 'inner';\nif ( !( 'innerWidth' in window ) )\n{\na = 'client';\ne = document.documentElement || document.body;\n}\nlet dimentions = { width : e[ a+'Width' ] , height : e[ a+'Height' ] }\n\nthis.setState({\n  screenWidth: dimentions.width\n})\nif (dimentions.width < 600) {\n  this.setState({mobileUser: true,\n  })\n}\n}\n\ncalMediumLevel = () => {\n\n  let set = this.state.timelineVals.map(item => item.level)\n  let sum = set.reduce((acc, cur) => acc + cur)\n  //console.log(sum)\n  let avg = sum / set.length\n  \n  this.setState({\n  mediumVal: Math.round(avg)\n  })\n}\n\ncalMiddle = () => {\n  let set = this.state.timelineVals.map(item => item.level)\n  let big = set.reduce((acc, cur) => {\n    if (cur > acc){  \n    acc = cur}\n  })\n  //console.log(sum)\n  let avg = big / 2\n  this.setState({\n  middle: Math.round(avg)\n  })\n}\n\n\nplus30Mins = (dateTime) => {\n  let newTime = dateTime.split(/\\D+/);\n  let output =  new Date(Date.UTC(newTime[0], newTime[1]-1, newTime[2], newTime[3], newTime[4], newTime[5]));\n  output.setMinutes(output.getMinutes() + 30)\n  let newdateTime = output.toISOString()\n  return newdateTime\n}\n\nloading = () => {\n  if (typeof this.state.forecastC[0] === 'undefined') {\n    console.log('loading check')\n    this.setState({loading:true})\n  }else {this.setState({loading:false})}\n}\n\n  componentDidMount () {\n    this.loading()\n    this.viewport()\n    this.get48hForecast(this.now(),true)\n    this.compileRegionIndex()\n    {setInterval(() => {this.countEmmissions()},500)}\n    \n  }\n\n\n  \n\n  componentDidUpdate (prevProps, prevState) {\n    if (this.state.setRegion !== prevState.setRegion){\n      this.get48hForecast(this.now(),true)\n      this.compileRegionIndex()\n    }\n    else if (this.state.setPostCode !== prevState.setPostCode){\n      this.get48hForecast(this.now(),false)\n    }\n    else if (this.state.forecastA !== prevState.forecastA)\n    {\n      return this.getForecastB(this.state.setRegion)\n    }\n    else if (this.state.forecastB !== prevState.forecastB)\n    {\n      return this.getForecastC(this.state.setRegion)\n    }\n    else if (this.state.forecastC !== prevState.forecastC)\n    {\n      return (\n        this.aggForecast(this.allForecast(), this.determinGran(), false),\n        this.aggForecast(this.allForecast(), 2, true),\n        this.loading()\n        )\n    }\n    else if (this.state.setPeriod !== prevState.setPeriod)\n    {\n      return (\n      this.aggForecast(this.allForecast(), this.determinGran()))\n    }\n    else if (this.state.timelineVals !== prevState.timelineVals) {\n      return (\n        this.calMediumLevel(),\n        this.calMiddle()\n      )\n    }\n  }\n\n  countEmmissions = () => {\n    let count = this.state.emissions += 0.0142\n    this.setState({emissions: count})\n  }\n  \nget48hForecast = (start, useID) => {\n  if (this.state.useId && useID){\n    this.setState({loading:true})\n    API.getRegionId48HrsData(this.state.setRegion, start).then(info => this.setState({forecastA: info.data.data}))\n  }else {\n    // API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({forecastA: info.data.data}, {setRegion: info.data.regionid}))\n    this.setState({loading:true})\n    API.getRegionPostCode48HrsData(this.state.setPostCode, start).then(info => this.setState({forecastA: info.data.data}))\n  }\n}\ngetForecastB = () => {\n  const start = this.state.forecastA[this.state.forecastA.length - 1].to\n  const startPlus30 = this.plus30Mins(start)\n  console.log(startPlus30)\n  if (this.state.useId) {\n    API.getRegionId48HrsData(this.state.setRegion, startPlus30).then(info => this.setState({forecastB: info.data.data}))\n}else{\n    API.getRegionPostCode48HrsData(this.state.setPostCode, startPlus30).then(info => this.setState({forecastB: info.data.data}))\n  } \n}\ngetForecastC = () => {\n  const start = this.state.forecastB[this.state.forecastB.length - 1].to\n  const startPlus30 = this.plus30Mins(start)\n  if (this.state.useId) {\n    API.getRegionId48HrsData(this.state.setRegion, startPlus30).then(info => this.setState({forecastC: info.data.data, loding:false}))\n}else{\n    API.getRegionPostCode48HrsData(this.state.setPostCode, startPlus30).then(info => this.setState({forecastC: info.data.data, loading:false}))\n  } \n}\n\n\n\n  compileRegionIndex = () => {\n  \n    this.setState({regionIndex: []})\n    API.getCurrentRegionalData().then(info => info.data[0].regions.map(item => {\n          this.setState({\n              regionIndex: \n                [...this.state.regionIndex,\n                {id: item.regionid,\n                name: item.shortname}],\n                }\n          )\n          if (item.regionid === this.state.setRegion){\n            this.setState({\n              currentLevel: {region: item.regionid, text: item.intensity.index, value: item.intensity.forecast}\n            })\n          }\n       }\n      )\n    ).then(datainfo => console.log(datainfo))\n}\n  \n\nallForecast = () => {\n  const allForecast = [...this.state.forecastA, ...this.state.forecastB, ...this.state.forecastC]\n  return allForecast\n}\n\ncalTextLevel = (value) => {\n  if (value > 360) {\n      return 'Very High'\n  } \n  else if (value >= 260 && value <= 359 ) {\n      return 'High'\n  }\n  else if (value >= 160 && value <= 259 ) {\n      return 'Moderate'\n  } \n  else if (value >= 60 && value <= 159 ) {\n    return 'Low'\n  }\n  else if (value <= 59 && value >= 0 ) {\n    return 'Very Low'\n  }else \n  {\n    return 'Level not known'\n  }\n}\n\ndeterminGran = () => {\n let newGrand = 2\n  if (this.state.setPeriod <= 8) {\n    newGrand = 2\n  }else if (this.state.setPeriod > 8 && this.state.setPeriod <= 12) {\n    newGrand = 2\n  }else if (this.state.setPeriod > 12 && this.state.setPeriod <= 24) {\n    newGrand = 2\n  }else if (this.state.setPeriod > 24 && this.state.setPeriod <= 48) {\n    newGrand = 2\n  }else if (this.state.setPeriod > 48 && this.state.setPeriod <= 96) {\n    newGrand = 4\n  }else if (this.state.setPeriod > 200) {\n    newGrand = 6\n  }\n  this.setState({setGran: newGrand})\n  return newGrand\n}\n\nformatFuelMix = (array) => {\n  return array.map(obj => {\n    return {label: obj.perc > 1 && obj.fuel !== 'biomass' ? obj.fuel : ''\n      ,angle: obj.perc\n      ,className: ''\n      ,subLabel: obj.fuel === 'biomass' ? 'biomass' : ''    \n    }\n\n  })\n}\n\naggForecast = (inputArray, granularity, timeline) => {\n \n  // const period = 8\n  // const periodUnits = 'h'\n  // const granularity = 4\n  // const forecastArray =[2,3,6,1,5,1,1,1,1,1,1,10]\n\n  let forecastArray = []\n  let forecastArrayFuelMix = []\n  \n\n  if (timeline) {\n  forecastArray = [...inputArray]\n  }else{\n  forecastArray = inputArray.slice(0, this.state.setPeriod)\n  forecastArrayFuelMix = [...inputArray]\n}\n\n\n\nlet agged = []\n\nfor (let index = 0; index < forecastArray.length; index+=granularity) {\n \n  if (index%granularity === 0) {\n  const half = forecastArray[index];\n  let set = forecastArray.slice(index, index+granularity).map(item => item.intensity.forecast)\n      //console.log(set)\n  let sum = set.reduce((acc, cur) => acc + cur)\n      //console.log(sum)\n      let avg = sum / set.length\n  agged = [...agged, {from:half.from, level:Math.round(avg), text:this.calTextLevel(avg)}]\n}\n}\n\nlet fuelMix = []\n\nfor (let index = 0; index < forecastArrayFuelMix.length; index+=2) {\n \n  if (index%2 === 0) {\n  const half = forecastArrayFuelMix[index];\n  let set = forecastArrayFuelMix.slice(index, index+2).map(item => item.intensity.forecast)\n      //console.log(set)\n  let sum = set.reduce((acc, cur) => acc + cur)\n      //console.log(sum)\n      let avg = sum / set.length\n    fuelMix = [...fuelMix, {date:half.from, level:Math.round(avg), \n    text:this.calTextLevel(avg),\n    chartData: this.formatFuelMix(half.generationmix)\n  }]\n}\n}\n\n\n\n//let newAgged = agged.slice(0, this.state.setPeriod)\n\n\nif (timeline){\n  this.setState({\n    timelineVals: agged,\n  })\n}else {\n  \nlet best = this.bestPeriods(agged)\n\nthis.setState({\n  aggedVals: agged,\n  bestPeriods: best,\n  fuelMix: fuelMix\n})\n}\n//console.log(agged)\n//return agged\n}\n\n\n\n\nbestPeriods = (objArray) => {\n\nlet day = objArray.map(item => {\n  if (parseInt(item.from.split('T')[1]) >= 6 && parseInt(item.from.split('T')[1]) <= 23){\n    return item\n  } \n})\n\nlet night = objArray.map(item => {\n  if (parseInt(item.from.split('T')[1]) < 6 || parseInt(item.from.split('T')[1]) === 24){\n    return item\n  } \n})\n\nlet bestDay = day.sort((a, b) => (a.level > b.level) ? 1 : -1).slice(0,3)\nlet bestNight = night.sort((a, b) => (a.level > b.level) ? 1 : -1).slice(0,3)\n\nreturn {day:bestDay, night:bestNight}\n\n}\n\nupdateRegion = (newRegion) => {\nthis.setState({setRegion: newRegion})\n}\n\nupdatePostCode = (newPostCode => {\n  this.setState({setPostCode: newPostCode})\n})\nupdatePeriod = (newPeriod) => {\nthis.setState({setPeriod: newPeriod})\n}\n\n\n\n  render() {\n    return (\n\n\n<Router>\n<ScrollToTop />\n \n\n<div>\n\n<Hero mobileUser={this.state.mobileUser}/>\n\n<Nav/>\n\n<Container className=\"parentContainer\" >\n\n\n<Switch>\n\n    <Route exact path=\"/\">\n          <Start intensityData={this.state.currentLevel} emissions={this.state.emissions.toFixed(4)}/>\n    </Route>\n    <Route path=\"/start\" >\n          <Start intensityData={this.state.currentLevel} emissions={this.state.emissions.toFixed(4)}/>\n    </Route>\n    <Route path=\"/forecast-summary\">\n          <Forecast regionIndex={this.state.regionIndex} setRegion={this.state.setRegion} updatePostCode={this.updatePostCode} setPeriod={this.state.setPeriod}\n                    updateRegion={this.updateRegion} updatePeriod={this.updatePeriod} aggedVals={this.state.aggedVals}\n                    mobileUser={this.state.mobileUser} bestPeriods={this.state.bestPeriods} loading={this.state.loading}\n          />\n    </Route>\n    <Route path=\"/forecast-timeline\">\n          <Timeline loading={this.state.loading} timelineVals={this.state.timelineVals} screenWidth={this.state.screenWidth} middleLevel={this.state.middle} mobileUser={this.state.mobileUser}/>\n    </Route>\n      <Route path=\"/forecast-fuelmix\">\n      <FuelMix data={this.state.fuelMix} mobileUser={this.state.mobileUser}/>\n\n      </Route>\n\n\n    <Route path=\"/advice\">\n          <Advice />\n    </Route>\n    <Route path=\"/about\">\n          <About />\n    </Route>\n\n</Switch>\n      \n</Container>\n</div>\n\n</Router>\n\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}