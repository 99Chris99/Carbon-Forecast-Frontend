{"ast":null,"code":"var _jsxFileName = \"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Start.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nexport class Start extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      countDown: ''\n    };\n\n    this.startMeterValueMaths = () => {\n      const maxVal = 500;\n      let intensityValue = this.props.intensityData.value / maxVal; //  console.log(intensityValue)\n      //  console.log(intensityValue * 180)\n\n      return intensityValue * 180;\n    };\n\n    this.parseDate = input => {\n      let optionsDate = {\n        weekday: 'short',\n        day: 'numeric',\n        month: 'numeric'\n      };\n      let optionsTime = {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      };\n      let parsedDate = new Date(Date.UTC(parseInt(input.slice(0, 4), 10), parseInt(input.slice(5, 7), 10) - 1, parseInt(input.slice(8, 10), 10), parseInt(input.slice(11, 13), 10), parseInt(input.slice(14, 16), 10) //parseInt(input.slice(13,15), 10)\n      ));\n      return \"\".concat(parsedDate.toLocaleString(\"en-GB\", optionsTime), \" \").concat(parsedDate.toLocaleString(\"en-GB\", optionsDate));\n    };\n\n    this.countDownToDoom = () => {\n      let output = '';\n      let deadline = new Date(\"Jan 5, 2025 15:37:25\").getTime(); //let x = setInterval(function() { \n\n      let now = new Date().getTime();\n      let t = deadline - now;\n      let days = Math.floor(t / (1000 * 60 * 60 * 24));\n      let hours = Math.floor(t % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      let minutes = Math.floor(t % (1000 * 60 * 60) / (1000 * 60));\n      let seconds = Math.floor(t % (1000 * 60) / 1000);\n      output = \"\".concat(days, \"d \").concat(hours, \"h \").concat(minutes, \"m \").concat(seconds, \"s\");\n\n      if (t < 0) {\n        //clearInterval(x); \n        output = \"TIMES UP\";\n      }\n\n      this.setState({\n        countDown: output\n      });\n    };\n  }\n\n  componentDidMount() {\n    {\n      setInterval(() => {\n        this.countDownToDoom();\n      }, 1000);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Hi there, I'm the start page, hope you are well!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"startmeter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gauge-a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gauge-b\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gauge-c\",\n      style: {\n        transform: \"rotate(\".concat(this.props.intensityData.value > 0 ? this.startMeterValueMaths() : 0, \"deg)\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gauge-data\",\n      id: this.props.intensityData.value > 0 ? 'loadedData' : undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.intensityData.value), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \"Hover On Me\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.countDown)))));\n  }\n\n}\nexport default Start;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Start.js"],"names":["React","Component","Container","Start","state","countDown","startMeterValueMaths","maxVal","intensityValue","props","intensityData","value","parseDate","input","optionsDate","weekday","day","month","optionsTime","hour","minute","hour12","parsedDate","Date","UTC","parseInt","slice","toLocaleString","countDownToDoom","output","deadline","getTime","now","t","days","Math","floor","hours","minutes","seconds","setState","componentDidMount","setInterval","render","transform","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\n\nexport class Start extends Component {\n    state = {\n        countDown: ''\n    }\n\n\n    componentDidMount () {\n        {setInterval(() => {this.countDownToDoom()},1000)}\n    }\n\nstartMeterValueMaths = () => {\n            const maxVal = 500;\n            let intensityValue = this.props.intensityData.value / maxVal\n            //  console.log(intensityValue)\n            //  console.log(intensityValue * 180)\n            return intensityValue * 180\n\n}\n\nparseDate = (input) => {\n    let optionsDate = { weekday: 'short', day: 'numeric', month: 'numeric' };\n    let optionsTime = { hour: 'numeric', minute: 'numeric', hour12: true};\n           let parsedDate = new Date(Date.UTC(\n               parseInt(input.slice(0, 4), 10),\n               parseInt(input.slice(5, 7), 10) - 1,\n               parseInt(input.slice(8, 10), 10),\n               parseInt(input.slice(11, 13), 10),\n               parseInt(input.slice(14, 16), 10),\n             //parseInt(input.slice(13,15), 10)\n           ))\n           return (`${parsedDate.toLocaleString(\"en-GB\", optionsTime)} ${parsedDate.toLocaleString(\"en-GB\", optionsDate)}`)\n   }\n\ncountDownToDoom = () => {\n\nlet output = ''\n\nlet deadline = new Date(\"Jan 5, 2025 15:37:25\").getTime(); \n//let x = setInterval(function() { \nlet now = new Date().getTime(); \nlet t = deadline - now; \n\nlet days = Math.floor(t / (1000 * 60 * 60 * 24)); \nlet hours = Math.floor((t%(1000 * 60 * 60 * 24))/(1000 * 60 * 60)); \nlet minutes = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60)); \nlet seconds = Math.floor((t % (1000 * 60)) / 1000);\n\noutput = `${days}d ${hours}h ${minutes}m ${seconds}s`\n\n    \nif (t < 0) { \n        //clearInterval(x); \n        output = \"TIMES UP\" \n    } \n\n\n\nthis.setState({\n    countDown: output\n})\n\n}\n\n    render() {\n        return (\n            <div>\n            <div>\n            <h1>Hi there, I'm the start page, hope you are well!</h1>   \n            <br></br>\n            </div>\n            <div>\n            <Container>\n        \n    <div className=\"startmeter\">\n\t\t<div className=\"gauge-a\"></div>\n\t\t<div className=\"gauge-b\"></div>\n\t\t<div className=\"gauge-c\" style={{transform:`rotate(${this.props.intensityData.value > 0 ? this.startMeterValueMaths() : 0}deg)`}}></div>\n\t\t<div className=\"gauge-data\" id={this.props.intensityData.value > 0 ? 'loadedData' : undefined}><h1 id=\"percent\">{this.props.intensityData.value}</h1><br></br>Hover On Me</div>\n\t</div>\n\n    <div>\n    {/* <h4>HiHi{setInterval(() => this.countDownToDoom(), 1000)}</h4> */}\n    {/* <h4>{setInterval(() => `${this.countDownToDoom()}`,1000)}</h4> */}\n    <h4>{this.state.countDown}</h4>\n    </div>\n\n    </Container>\n    </div>\n    </div>\n            \n        );\n    }\n}\n\nexport default Start;"]},"metadata":{},"sourceType":"module"}