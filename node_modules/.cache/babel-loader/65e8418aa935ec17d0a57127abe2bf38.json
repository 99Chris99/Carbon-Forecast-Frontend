{"ast":null,"code":"const apiEndpoint = \"https://api.carbonintensity.org.uk/\";\nconst nationalURL = \"\".concat(apiEndpoint, \"/intensity\");\nconst allRegionsURL = \"\".concat(apiEndpoint, \"/regional\");\nconst regionIndex = [{\n  key: 0,\n  name: 'test'\n}];\n\nconst getData = URL => fetch(URL).then(response => response.json());\n\nconst compileRegionIndex = () => {\n  getData(allRegionsURL).then(info => info.data[0].regions.map(item => {\n    regionIndex = [...regionIndex, {\n      key: item.regionid,\n      name: item.shortname\n    }];\n  }));\n};\n\nexport default {\n  getData,\n  compileRegionIndex\n};","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/adapters/API.js"],"names":["apiEndpoint","nationalURL","allRegionsURL","regionIndex","key","name","getData","URL","fetch","then","response","json","compileRegionIndex","info","data","regions","map","item","regionid","shortname"],"mappings":"AAAA,MAAMA,WAAW,wCAAjB;AACA,MAAMC,WAAW,aAAMD,WAAN,eAAjB;AACA,MAAME,aAAa,aAAMF,WAAN,cAAnB;AAEA,MAAMG,WAAW,GAAG,CAEhB;AAACC,EAAAA,GAAG,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE;AAAf,CAFgB,CAApB;;AAMA,MAAMC,OAAO,GAAIC,GAAD,IAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA5B,CAAzB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7BN,EAAAA,OAAO,CAACJ,aAAD,CAAP,CAAuBO,IAAvB,CAA4BI,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAU,CAAV,EAAaC,OAAb,CAAqBC,GAArB,CAAyBC,IAAI,IAAI;AAC7Dd,IAAAA,WAAW,GAAG,CACV,GAAGA,WADO,EAEV;AAACC,MAAAA,GAAG,EAAEa,IAAI,CAACC,QAAX;AACAb,MAAAA,IAAI,EAAEY,IAAI,CAACE;AADX,KAFU,CAAd;AAKP,GANmC,CAApC;AASH,CAVD;;AAcA,eAAe;AACXb,EAAAA,OADW;AAEXM,EAAAA;AAFW,CAAf","sourcesContent":["const apiEndpoint = `https://api.carbonintensity.org.uk/`\nconst nationalURL = `${apiEndpoint}/intensity`\nconst allRegionsURL = `${apiEndpoint}/regional`\n\nconst regionIndex = [\n\n    {key: 0, name: 'test'}\n\n]\n\nconst getData = (URL) => fetch(URL).then(response => response.json())\n\nconst compileRegionIndex = () => {\n    getData(allRegionsURL).then(info => info.data[0].regions.map(item => {\n            regionIndex = [\n                ...regionIndex,\n                {key: item.regionid,\n                name: item.shortname}\n            ]\n    }\n    )\n    )\n}\n\n\n\nexport default {\n    getData,\n    compileRegionIndex,\n}"]},"metadata":{},"sourceType":"module"}