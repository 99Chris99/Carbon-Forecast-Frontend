{"ast":null,"code":"import _classCallCheck from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Chris/Development/Final-Project/carbon-forecast-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Dropdown,Accordion,Transition,Search,Table,Divider,Dimmer,Loader,Grid,Card,Button,Image,Segment,Container,TableRow}from'semantic-ui-react';import SummaryChart from'./SummaryChart';import TitleContent from'../content/TitleContent';import PostCodeSearch from'./PostCodeSearch';export var Forecast=/*#__PURE__*/function(_Component){_inherits(Forecast,_Component);function Forecast(){var _getPrototypeOf2;var _this;_classCallCheck(this,Forecast);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Forecast)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={period:48,region:18,sortByLevel:false,bestPeriodDisplayDay:true,bestPeriodLoaded:false,bestPeriodsDay:[{description:\"Loading \\n Loading \\n Loading\"}],bestPeriodsNight:[{description:\"Loading \\n Loading \\n Loading\"}]};_this.periodOptions=[{key:6,text:'+6 hours',value:12//   image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg' },\n},{key:8,text:'+8 hours',value:16},{key:12,text:'+12 hours',value:24},{key:24,text:'+24 hours',value:48},{key:48,text:'+48 hours',value:96},{key:100,text:'Max',value:500}];_this.parseDate=function(input){var optionsDate={weekday:'short',day:'numeric',month:'numeric'};var optionsTime={hour:'numeric',minute:'numeric',hour12:true};var parsedDate=new Date(Date.UTC(parseInt(input.slice(0,4),10),parseInt(input.slice(5,7),10)-1,parseInt(input.slice(8,10),10),parseInt(input.slice(11,13),10),parseInt(input.slice(14,16),10)//parseInt(input.slice(13,15), 10)\n));return\"\".concat(parsedDate.toLocaleString(\"en-GB\",optionsTime),\" \").concat(parsedDate.toLocaleString(\"en-GB\",optionsDate));};_this.genRegionOptions=function(){var output=_this.props.regionIndex.map(function(obj){return{key:obj.id,text:obj.name,value:obj.id};});output.sort(function(a,b){return a.key<b.key?1:-1;});return output;};_this.setPeriod=function(event,data){console.log(data.value);_this.setState({period:data.value});};_this.setRegion=function(event,data){console.log(data.value);_this.setState({region:data.value});};_this.controlSort=function(){var newProps=_this.props.aggedVals;if(_this.state.sortByLevel==!true){newProps=_this.props.aggedVals.sort(function(a,b){return Date.parse(a.from)>Date.parse(b.from)?1:-1;});}else if(_this.state.sortByLevel===true){newProps=_this.props.aggedVals.sort(function(a,b){return a.level>b.level?1:-1;});}return newProps;};_this.handleSortButton=function(event){var newVal=_this.state.sortByLevel?false:true;_this.setState({sortByLevel:newVal});};_this.handleDayNightButton=function(event){var newVal=_this.state.bestPeriodDisplayDay?false:true;_this.setState({bestPeriodDisplayDay:newVal});};_this.renderBestPeriods=function(){//let bestDay = this.props.bestPeriods.length > 0 ? this.props.bestPeriods.day : [ {from: 'Loading',level:'Loading',text:'Loading'} ]\nvar bestDay=_this.props.bestPeriods.day;var bestNight=_this.props.bestPeriods.night;var dayOutput=[];var nightOutput=[];var dayOutputBig=[];var nightOutputBig=[];if(typeof bestDay[0]!=='undefined'&&typeof bestDay[1]!=='undefined'&&typeof bestDay[2]!=='undefined'){dayOutput=[{description:\"\".concat(_this.parseDate(bestDay[0].from),\"\\n\").concat(bestDay[0].level,\"\\n\").concat(bestDay[0].text)},{description:\"\".concat(_this.parseDate(bestDay[1].from),\"\\n\").concat(bestDay[1].level,\"\\n\").concat(bestDay[1].text)},{description:\"\".concat(_this.parseDate(bestDay[2].from),\"\\n\").concat(bestDay[2].level,\"\\n\").concat(bestDay[2].text)}];dayOutputBig=[{header:\"\".concat(_this.parseDate(bestDay[0].from)),description:\"\".concat(bestDay[0].level,\"\\n\").concat(bestDay[0].text)},{header:\"\".concat(_this.parseDate(bestDay[1].from)),description:\"\".concat(bestDay[1].level,\"\\n\").concat(bestDay[1].text)},{header:\"\".concat(_this.parseDate(bestDay[2].from)),description:\"\".concat(bestDay[2].level,\"\\n\").concat(bestDay[2].text)}];}else{dayOutput=[{description:\"Please increase period to include night-time hours \"}];dayOutputBig=[{description:\"Please increase period to include night-time hours \"}];}if(typeof bestNight[0]!=='undefined'&&typeof bestNight[1]!=='undefined'&&typeof bestNight[2]!=='undefined'){nightOutput=[{description:\"\".concat(_this.parseDate(bestNight[0].from),\"\\n\").concat(bestNight[0].level,\"\\n\").concat(bestNight[0].text)},{description:\"\".concat(_this.parseDate(bestNight[1].from),\"\\n\").concat(bestNight[1].level,\"\\n\").concat(bestNight[1].text)},{description:\"\".concat(_this.parseDate(bestNight[2].from),\"\\n\").concat(bestNight[2].level,\"\\n\").concat(bestNight[2].text)}];nightOutputBig=[{header:\"\".concat(_this.parseDate(bestNight[0].from)),description:\"\".concat(bestNight[0].level,\"\\n\").concat(bestNight[0].text)},{header:\"\".concat(_this.parseDate(bestNight[1].from)),description:\"\".concat(bestNight[1].level,\"\\n\").concat(bestNight[1].text)},{header:\"\".concat(_this.parseDate(bestNight[2].from)),description:\"\".concat(bestNight[2].level,\"\\n\").concat(bestNight[2].text)}];}else{nightOutput=[{description:\"Please increase period to include night-time hours \"}];nightOutputBig=[{description:\"Please increase period to include night-time hours \"}];}_this.setState({bestPeriodsDay:_this.props.mobileUser?dayOutput:dayOutputBig,bestPeriodsNight:_this.props.mobileUser?nightOutput:nightOutputBig});// return output\n};_this.handleDropDown=function(data){return _this.props.updateRegion(data.value);};return _this;}_createClass(Forecast,[{key:\"componentDidMount\",value:function componentDidMount(){if(typeof this.props.bestPeriods!=='undefined'){if(typeof this.props.bestPeriods.day!=='undefined'||typeof this.props.bestPeriods.night!=='undefined'){if(typeof this.props.bestPeriods.day[0]!=='undefined'||typeof this.props.bestPeriods.night[0]!=='undefined'){this.renderBestPeriods();}}}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(this.props.bestPeriods!==prevProps.bestPeriods){this.renderBestPeriods();}if(this.props.aggedVals!==prevProps.aggedVals){}}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"bgPanel\"},React.createElement(\"h1\",null,\" \",React.createElement(\"span\",{className:\"textHighlight\"},\" Forecast Summary \"),\" \"),React.createElement(Accordion,{defaultActiveIndex:[0],panels:TitleContent.forecastSummaryTitle,exclusive:false})),React.createElement(\"div\",null,React.createElement(\"div\",{className:\"bgPanel\"},React.createElement(\"h2\",null,React.createElement(\"span\",{className:\"textHighlight\"},\"Top 3 Periods\")),React.createElement(\"p\",null,\"Top 3 times to use electricity duiring this period:\"),React.createElement(Card.Group,{itemsPerRow:3,items:this.state.bestPeriodDisplayDay?this.state.bestPeriodsDay:this.state.bestPeriodsNight}),React.createElement(\"br\",null),React.createElement(Button,{size:\"small\",attached:\"left\",active:this.state.bestPeriodDisplayDay,toggle:true,onClick:this.handleDayNightButton},\"Day\"),React.createElement(Button,{size:\"small\",attached:\"right\",active:!this.state.bestPeriodDisplayDay,toggle:true,onClick:this.handleDayNightButton},\"Night\")),React.createElement(\"div\",{className:\"bgPanel\"},React.createElement(\"h2\",null,\"Options\"),React.createElement(\"h4\",null,\"Selected: Period: \",this.props.setPeriod<=48?\"+\".concat(this.props.setPeriod/2,\" hrs\"):'Max',\"  |  Region: \",this.props.useId?this.props.regionName:this.props.setPostCode,\" \"),React.createElement(Dimmer,{active:this.props.loading,page:true},React.createElement(Loader,null,\"Loading\")),React.createElement(Table,{columns:2},React.createElement(Table.Row,null,React.createElement(Table.Cell,null,\"Period:\",React.createElement(\"br\",null),React.createElement(Dropdown,{compact:this.props.mobileUser?true:false,placeholder:this.props.setPeriod<=48?\"+\".concat(this.props.setPeriod/2,\" hrs\"):'Max',selection:\"2\",options:this.periodOptions,onChange:function onChange(event,data){return _this2.props.updatePeriod(data.value);}})),React.createElement(Table.Cell,null)),React.createElement(Table.Row,null,React.createElement(Table.Cell,null,\"Region\",React.createElement(\"br\",null),React.createElement(Dropdown,{placeholder:this.props.useId?this.props.regionName:'Select Region',selection:true,options:this.genRegionOptions(),onChange:function onChange(event,data){_this2.handleDropDown(data);}//onChange={(event, data) => {this.props.updateRegion(data.value)}}\n})),React.createElement(Table.Cell,null,React.createElement(PostCodeSearch,{updatePostCode:this.props.updatePostCode})))))),React.createElement(\"div\",{id:\"summary-chart\",className:\"bgPanel\"},React.createElement(\"h2\",null,\"Summary Chart\"),React.createElement(SummaryChart,{aggedVals:this.controlSort(),sortTrigger:this.state.sortByLevel,mobileUser:this.props.mobileUser}),React.createElement(\"button\",{class:\"ui button\",onClick:this.handleSortButton},\"Sort By \",this.state.sortByLevel?'Time':'Intensity Level')));}}]);return Forecast;}(Component);export default Forecast;","map":{"version":3,"sources":["/Users/Chris/Development/Final-Project/carbon-forecast-frontend/src/components/Forecast.js"],"names":["React","Component","Dropdown","Accordion","Transition","Search","Table","Divider","Dimmer","Loader","Grid","Card","Button","Image","Segment","Container","TableRow","SummaryChart","TitleContent","PostCodeSearch","Forecast","state","period","region","sortByLevel","bestPeriodDisplayDay","bestPeriodLoaded","bestPeriodsDay","description","bestPeriodsNight","periodOptions","key","text","value","parseDate","input","optionsDate","weekday","day","month","optionsTime","hour","minute","hour12","parsedDate","Date","UTC","parseInt","slice","toLocaleString","genRegionOptions","output","props","regionIndex","map","obj","id","name","sort","a","b","setPeriod","event","data","console","log","setState","setRegion","controlSort","newProps","aggedVals","parse","from","level","handleSortButton","newVal","handleDayNightButton","renderBestPeriods","bestDay","bestPeriods","bestNight","night","dayOutput","nightOutput","dayOutputBig","nightOutputBig","header","mobileUser","handleDropDown","updateRegion","prevProps","prevState","forecastSummaryTitle","useId","regionName","setPostCode","loading","updatePeriod","updatePostCode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Dropdown, Accordion,Transition, Search, Table, Divider,Dimmer,Loader, Grid, Card, Button, Image, Segment, Container, TableRow } from 'semantic-ui-react';\nimport SummaryChart from './SummaryChart';\nimport TitleContent from '../content/TitleContent';\nimport PostCodeSearch from './PostCodeSearch';\n\nexport class Forecast extends Component {\n\n\nstate = {\n    period: 48,\n    region: 18,\n    sortByLevel: false,\n    bestPeriodDisplayDay: true,\n    bestPeriodLoaded: false,\n    bestPeriodsDay: [{description: `Loading \\n Loading \\n Loading`}],\n    bestPeriodsNight: [{description: `Loading \\n Loading \\n Loading`}]\n}\n\ncomponentDidMount () {\n    if (typeof this.props.bestPeriods !== 'undefined'){\n       if (typeof this.props.bestPeriods.day !== 'undefined' || typeof this.props.bestPeriods.night !== 'undefined'){\n            if (typeof this.props.bestPeriods.day[0] !== 'undefined' || typeof this.props.bestPeriods.night[0] !== 'undefined'){\n                this.renderBestPeriods()\n    }\n    }\n}\n\n}\n\ncomponentDidUpdate (prevProps, prevState) {\n    if (this.props.bestPeriods !== prevProps.bestPeriods){\n        this.renderBestPeriods()\n    }\n\n    if (this.props.aggedVals !== prevProps.aggedVals) {\n    \n    }\n}\n    periodOptions = [\n            {\n              key: 6,\n              text: '+6 hours',\n              value: 12,\n            //   image: { avatar: true, src: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg' },\n            },\n            {\n              key: 8,\n              text: '+8 hours',\n              value: 16,\n            },\n            {\n              key: 12,\n              text: '+12 hours',\n              value: 24,\n            },\n            {\n              key: 24,\n              text: '+24 hours',\n              value: 48,\n            },\n            {\n              key: 48,\n              text: '+48 hours',\n              value: 96,\n            },\n            {\n              key: 100,\n              text: 'Max',\n              value: 500,\n            },\n          ]\n\n\n\n        \n          parseDate = (input) => {\n            let optionsDate = { weekday: 'short', day: 'numeric', month: 'numeric' };\n            let optionsTime = { hour: 'numeric', minute: 'numeric', hour12: true};\n                   let parsedDate = new Date(Date.UTC(\n                       parseInt(input.slice(0, 4), 10),\n                       parseInt(input.slice(5, 7), 10) - 1,\n                       parseInt(input.slice(8, 10), 10),\n                       parseInt(input.slice(11, 13), 10),\n                       parseInt(input.slice(14, 16), 10),\n                     //parseInt(input.slice(13,15), 10)\n                   ))\n                   return (`${parsedDate.toLocaleString(\"en-GB\", optionsTime)} ${parsedDate.toLocaleString(\"en-GB\", optionsDate)}`)\n           }\n\n\n          genRegionOptions = () => {\n          let output = this.props.regionIndex.map(obj => {\n                return {key: obj.id, text: obj.name, value: obj.id}\n            })\n            output.sort((a,b) => (a.key < b.key) ? 1 : -1)\n            return output\n        }\n\n        setPeriod = (event, data) => {\n            console.log(data.value)\n            this.setState({\n                period: data.value\n            })\n        }\n        setRegion = (event, data) => {\n            console.log(data.value)\n            this.setState({\n                region: data.value\n            })\n        }\n\n        controlSort = () => {\n            let newProps = this.props.aggedVals\n          if (this.state.sortByLevel ==! true){\n           newProps = this.props.aggedVals.sort((a,b) => (Date.parse(a.from) > Date.parse(b.from)? 1 : -1))\n            }\n            else if (this.state.sortByLevel === true){\n                newProps = this.props.aggedVals.sort((a,b) => a.level > b.level? 1 : -1)\n            }\n                 return newProps\n        }\n\n        handleSortButton = (event) => {\n            let newVal = this.state.sortByLevel ? false : true\n            this.setState({sortByLevel: newVal})\n        } \n        handleDayNightButton = (event) => {\n            let newVal = this.state.bestPeriodDisplayDay ? false : true\n            this.setState({bestPeriodDisplayDay: newVal})\n        }\n\n        \n\n    renderBestPeriods = () => {\n                \n        //let bestDay = this.props.bestPeriods.length > 0 ? this.props.bestPeriods.day : [ {from: 'Loading',level:'Loading',text:'Loading'} ]\n        let bestDay =   this.props.bestPeriods.day\n        let bestNight = this.props.bestPeriods.night\n        \n        let dayOutput = []\n        let nightOutput = []\n        let dayOutputBig = []\n        let nightOutputBig = []\n\n        if (typeof bestDay[0] !== 'undefined' && typeof bestDay[1] !== 'undefined' && typeof bestDay[2] !== 'undefined') {\n        dayOutput = [\n                       { description:  `${this.parseDate(bestDay[0].from)}\\n${bestDay[0].level}\\n${bestDay[0].text}`},\n                       { description:  `${this.parseDate(bestDay[1].from)}\\n${bestDay[1].level}\\n${bestDay[1].text}`},\n                       { description:  `${this.parseDate(bestDay[2].from)}\\n${bestDay[2].level}\\n${bestDay[2].text}`},\n                ]\n        dayOutputBig = [\n                       { header: `${this.parseDate(bestDay[0].from)}`, description:`${bestDay[0].level}\\n${bestDay[0].text}`},\n                       { header:  `${this.parseDate(bestDay[1].from)}`, description:`${bestDay[1].level}\\n${bestDay[1].text}`},\n                       { header:  `${this.parseDate(bestDay[2].from)}`, description:`${bestDay[2].level}\\n${bestDay[2].text}`},\n                ]\n            \n            }else{\n        dayOutput = [  { description:  `Please increase period to include night-time hours `}]\n        dayOutputBig = [  { description:  `Please increase period to include night-time hours `}]\n                }\n\n\n                \n\n        if (typeof bestNight[0] !== 'undefined' && typeof bestNight[1] !== 'undefined' && typeof bestNight[2] !== 'undefined'){\n        nightOutput = [\n                       { description:  `${this.parseDate(bestNight[0].from)}\\n${bestNight[0].level}\\n${bestNight[0].text}`},\n                       { description:  `${this.parseDate(bestNight[1].from)}\\n${bestNight[1].level}\\n${bestNight[1].text}`},\n                       { description:  `${this.parseDate(bestNight[2].from)}\\n${bestNight[2].level}\\n${bestNight[2].text}`},\n                    ]\n                    nightOutputBig = [\n                        { header: `${this.parseDate(bestNight[0].from)}`, description:`${bestNight[0].level}\\n${bestNight[0].text}`},\n                        { header:  `${this.parseDate(bestNight[1].from)}`, description:`${bestNight[1].level}\\n${bestNight[1].text}`},\n                        { header:  `${this.parseDate(bestNight[2].from)}`, description:`${bestNight[2].level}\\n${bestNight[2].text}`},\n                 ]\n\n                }else {\n                   nightOutput = [  { description:  `Please increase period to include night-time hours `}]\n                   nightOutputBig = [  { description:  `Please increase period to include night-time hours `}]\n\n            }\n            \n        this.setState({\n            bestPeriodsDay: this.props.mobileUser ? dayOutput : dayOutputBig ,\n            bestPeriodsNight: this.props.mobileUser ? nightOutput : nightOutputBig\n        })\n        // return output\n    } \n\n  \n\n    handleDropDown = (data) => {\n        return (\n                this.props.updateRegion(data.value)\n                )\n            }\n\n    \n    render() {\n        return (\n            \n            <div>\n\n\n\n<div className=\"bgPanel\">\n           <h1> <span className=\"textHighlight\"> Forecast Summary </span> </h1>\n      <Accordion defaultActiveIndex={[0]} panels={TitleContent.forecastSummaryTitle} exclusive={false}/>\n      </div>\n\n            <div>\n                {/* <h1> Hi, it's me forecast! Hows things?</h1> */}\n\n            {/* <Divider horizontal>Lowest Levels</Divider> */}\n    {/* <button class=\"ui button\" onClick={this.handleDayNightButton}>Show {this.state.bestPeriodDisplayDay ? 'Daytime' : 'Night-time'}</button> */}\n                <div className=\"bgPanel\">\n    <h2><span className=\"textHighlight\">Top 3 Periods</span></h2>\n    \n    <p>Top 3 times to use electricity duiring this period:\n    </p>\n <Card.Group itemsPerRow={3} items={this.state.bestPeriodDisplayDay ? this.state.bestPeriodsDay : this.state.bestPeriodsNight} />\n    \n    {/* <p onClick={this.handleDayNightButton}>\n     {this.state.bestPeriodDisplayDay ?  <b>Show Daytime</b> : `Show Daytime | `}   \n     {this.state.bestPeriodDisplayDay ?  ` | Show Night-time` : <b>Show Night-time</b>} \n     </p> */}\n<br></br>\n        <Button size='small'  attached='left'\n        active={this.state.bestPeriodDisplayDay}\n        toggle\n        onClick={this.handleDayNightButton}\n        >Day</Button>\n        <Button size='small' attached='right'\n        active={!this.state.bestPeriodDisplayDay}\n        toggle\n        onClick={this.handleDayNightButton}\n        >Night</Button>\n\n</div>\n\n\n{/* <Divider horizontal>Options</Divider> */}\n<div className=\"bgPanel\">\n{/* <Dimmer active={this.props.loading}>\n        <Loader>Loading</Loader>\n    </Dimmer> */}\n\n    <h2>Options</h2>\n    <h4>Selected: Period: {this.props.setPeriod <= 48 ? `+${this.props.setPeriod/2} hrs` : 'Max'}  |  Region: {this.props.useId ? this.props.regionName : this.props.setPostCode} </h4>\n\n    \n     <Dimmer active={this.props.loading} page>\n        <Loader>Loading</Loader>\n    </Dimmer> \n\n<Table   columns={2}>\n<Table.Row>\n<Table.Cell>\n    Period:\n    <br />\n    <Dropdown\n         compact={this.props.mobileUser ? true : false}\n         placeholder={this.props.setPeriod <= 48 ? `+${this.props.setPeriod/2} hrs` : 'Max'}\n         selection='2'\n         options={this.periodOptions}\n         onChange={(event, data) => this.props.updatePeriod(data.value)}\n         />\n    </Table.Cell>\n\n            <Table.Cell>\n    {/* <h3>Period: {this.props.setPeriod <= 48 ? `+${this.props.setPeriod/2} hrs` : 'Max'}</h3>\n    <h3>Region: {this.props.useId ? this.props.regionName : this.props.setPostCode}</h3> */}\n   </Table.Cell>\n   </Table.Row>\n\n   <Table.Row>\n    <Table.Cell>\n        Region\n        <br/>\n    <Dropdown\n          placeholder={this.props.useId ? this.props.regionName : 'Select Region'}\n          selection\n          options={this.genRegionOptions()}\n          onChange={(event, data) => {this.handleDropDown(data)}}\n          //onChange={(event, data) => {this.props.updateRegion(data.value)}}\n        />\n    </Table.Cell>\n        <Table.Cell>\n           \n   <PostCodeSearch updatePostCode={this.props.updatePostCode}/>\n    </Table.Cell>\n    </Table.Row>\n </Table>\n\n </div>\n{/* <Grid columns='2' >\n<Grid.Row>\n   <Grid.Column floated='left'>      \n    <Dropdown\n         placeholder='Period'\n         selection='2'\n         options={this.periodOptions}\n         onChange={(event, data) => this.props.updatePeriod(data.value)}\n         />\n       </Grid.Column>\n       <Grid.Column floated='left'>\n   <PostCodeSearch updatePostCode={this.props.updatePostCode}/>\n   </Grid.Column>\n</Grid.Row>\n<Grid.Row>\n    <Grid.Column floated='left'>      \n    <Dropdown\n          placeholder='Region'\n          selection\n          options={this.genRegionOptions()}\n          onChange={(event, data) => this.props.updateRegion(data.value)}\n        />\n        </Grid.Column>\n        <Grid.Column floated='left'>\n    <p>Yep thats right I'm some text!</p>\n    </Grid.Column>\n </Grid.Row>\n </Grid> */}\n\n\n\n</div>\n\n\n{/* <Divider horizontal>Carbon Levels</Divider> */}\n\n<div id=\"summary-chart\" className=\"bgPanel\">\n<h2>Summary Chart</h2>\n<SummaryChart aggedVals={this.controlSort()} sortTrigger={this.state.sortByLevel} mobileUser={this.props.mobileUser}/>\n<button class=\"ui button\" onClick={this.handleSortButton}>Sort By {this.state.sortByLevel ? 'Time' : 'Intensity Level'}</button>\n</div>\n\n\n</div>\n        );\n    }\n}\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}